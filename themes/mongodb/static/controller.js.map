{"version":3,"file":"controller.js","sources":["../src/js/util.js","../src/js/componentAccordion.js","../src/js/componentCloseOpen.js","../src/js/componentCodeBlockFix.js","../src/js/componentCopyButtons.js","../src/js/componentFastLoad.js","../src/node_modules/svelte/shared.js","../src/node_modules/rigning/src/components/BinaryQuestion.html","../src/node_modules/rigning/src/components/FreeformQuestion.html","../src/node_modules/rigning/src/components/MainWidget.html","../src/node_modules/rigning/src/lib.js","../src/js/componentFeedback.js","../src/js/componentTabs.js","../src/js/componentGuides.js","../src/js/componentLightbox.js","../src/js/componentOpenAPI.js","../src/js/componentPillStrip.js","../src/js/componentSidebar.js","../src/js/componentThirdParty.js","../src/js/componentToggleController.js","../src/js/componentUriwriter.js","../src/js/componentVersionSelector.js","../src/js/controller.js"],"sourcesContent":["export function isLeafNode($node) {\n    return !$node.siblings('ul:not(.simple)').length;\n}\n\nexport function toArray(arrayLike) {\n    const result = [];\n    for (let i = 0; i < arrayLike.length; i += 1) {\n        result.push(arrayLike[i]);\n    }\n\n    return result;\n}\n\n/* Checks a whitelist for non-leaf nodes that should trigger a full page reload */\nexport function requiresPageload($node) {\n    const docsExcludedNav = window.docsExcludedNav;\n\n    if (!docsExcludedNav || !docsExcludedNav.length) {\n        return false;\n    }\n\n    for (let i = 0; i < docsExcludedNav.length; i += 1) {\n        if ($node[0].href.indexOf(docsExcludedNav[i]) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function throttle(func, wait) {\n    let args = null;\n    let result = null;\n    let timeout = null;\n    let previous = 0;\n\n    function later() {\n        previous = Date.now();\n        timeout = null;\n        result = func.apply(...args);\n        if (!timeout) {\n            args = null;\n        }\n    }\n\n    return function(...newArgs) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        args = newArgs;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                window.clearTimeout(timeout);\n                timeout = null;\n            }\n\n            previous = now;\n            result = func(...args);\n            if (!timeout) {\n                args = null;\n            }\n        } else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n\n        return result;\n    };\n}\n\nexport function reportAnalytics(eventName, data) {\n    try {\n        window.analytics.track(eventName, data);\n    } catch (err) {\n        console.error(`Error reporting analytics: ${eventName}`, err);\n    }\n}\n\nexport class Dispatcher {\n    constructor() {\n        this.listeners = [];\n    }\n\n    listen(handler) {\n        this.listeners.push(handler);\n    }\n\n    dispatch(ctx) {\n        for (let i = 0; i < this.listeners.length; i += 1) {\n            this.listeners[i](ctx);\n        }\n    }\n}\n","import {reportAnalytics} from './util';\n\nconst COLLAPSED_PROPERTY = 'accordion--collapsed';\n\n/**\n * Expands and collapses the accordion. Changes the label for the\n * action, i.e., \"Expand\" or \"Collapse\"\n * @param {object} element The accordion element.\n * @returns {void}\n */\nfunction accordionShowHide(element) {\n    element.classList.toggle(COLLAPSED_PROPERTY);\n\n    const control = element.querySelector('.accordion__action');\n    control.innerHTML = (control.innerHTML === 'Expand') ? 'Collapse' : 'Expand';\n\n    const title = element.querySelector('.accordion__title').innerText;\n    reportAnalytics('Accordion Toggled', {\n        'title': title,\n        'status': element.classList.contains(COLLAPSED_PROPERTY) ? 'collapsed' : 'expanded'\n    });\n}\n\nexport function setup() {\n    // Get accordions and assign listeners to handle expand/collapse\n    const accordionElements = document.getElementsByClassName('accordion');\n    for (let i = 0; i < accordionElements.length; i += 1) {\n        const element = accordionElements[i];\n        const button = element.querySelector('.accordion__button');\n\n        button.addEventListener('click', accordionShowHide.bind(this, element));\n    }\n}\n","export function setup() {\n    const showNavButton = document.getElementById('showNav');\n    if (showNavButton) {\n        showNavButton.onclick = () => {\n            document.getElementById('sphinxsidebar').style.display = 'block';\n            document.getElementById('left-column').style.display = 'flex';\n            document.getElementById('showNav').style.display = 'none';\n        };\n    }\n\n    const closeNavButton = document.getElementById('closeNav');\n    if (closeNavButton) {\n        closeNavButton.onclick = () => {\n            document.getElementById('showNav').style.display = 'flex';\n            document.getElementById('left-column').style.display = 'none';\n        };\n    }\n}\n","/*\ncode-blocks with the :linenos: options render an html table, unlike\nregular code-blocks. This component moves the button row into a new row\nof the html table to fix the visual alignment.\n\nhttps://jira.mongodb.org/browse/DOCSP-2064\n*/\n\nfunction isLineNumberBlock(block) {\n    return Boolean(block.getElementsByClassName('linenos').length);\n}\n\nfunction isCaptionBlock(block) {\n    return Boolean(block.getElementsByClassName('caption-text').length);\n}\n\nfunction hasButtonRow(block) {\n    return Boolean(block.getElementsByClassName('button-row')[0]);\n}\n\nfunction moveButtonRowToTable(block) {\n    // Select existing elements\n    const buttonRow = block.getElementsByClassName('button-row')[0];\n    const tableBody = block.getElementsByClassName('highlighttable')[0].childNodes[0];\n\n    // Create new table elements\n    const tableButtonRow = document.createElement('tr');\n    const linenosSpacer = document.createElement('td');\n    const buttonRowDestination = document.createElement('td');\n\n    // Add class for { table-layout: fixed; } styling\n    linenosSpacer.className = 'linenos-button-row-spacer';\n\n    // Manipulate the DOM\n    tableBody.insertBefore(tableButtonRow, tableBody.firstChild);\n    tableButtonRow.appendChild(linenosSpacer);\n    tableButtonRow.appendChild(buttonRowDestination);\n    buttonRowDestination.appendChild(buttonRow);\n}\n\nfunction moveButtonRowBelowCaption(block) {\n    // Select existing elements\n    const buttonRow = block.getElementsByClassName('button-row')[0];\n    const caption = block.getElementsByClassName('code-block-caption')[0];\n\n    console.log('MOVING BELOW CAPTION');\n\n    // Manipulate the DOM\n    caption.parentNode.insertBefore(buttonRow, caption.nextSibling);\n}\n\nfunction fixCodeBlock(block) {\n    if (isLineNumberBlock(block)) {\n        moveButtonRowToTable(block);\n    }\n    else if (isCaptionBlock(block)) {\n        moveButtonRowBelowCaption(block);\n    }\n}\n\nexport function setup() {\n    const codeblocks = document.getElementsByClassName('button-code-block');\n    for (const codeblock of codeblocks) {\n        if (hasButtonRow(codeblock)) {\n            fixCodeBlock(codeblock);\n        }\n    }\n}\n","import {reportAnalytics, toArray} from './util';\n\nconst TOOLTIP_STATE_ACTIVE = 'code-button__tooltip--active';\nconst TOOLTIP_STATE_INACTIVE = 'code-button__tooltip--inactive';\n\nfunction cancelAndWait(f, timeoutID, ms) {\n    if (timeoutID >= 0) {\n        window.clearTimeout(timeoutID);\n    }\n\n    return window.setTimeout(f, ms);\n}\n\nfunction isCopyableCodeBlock(block) {\n    return Boolean(block.getElementsByClassName('copyable-code-block')[0]);\n}\n\nexport function setup() {\n    const buttonCodeBlocks = document.getElementsByClassName('button-code-block');\n    const copyableBlocks = toArray(buttonCodeBlocks).filter(isCopyableCodeBlock);\n\n    for (const block of copyableBlocks) {\n        const highlightElement = block.getElementsByClassName('highlight')[0];\n        if (!highlightElement) {\n            return;\n        }\n\n        const buttonRow = block.getElementsByClassName('button-row')[0];\n        const copyButton = buttonRow.getElementsByClassName('code-button--copy')[0];\n        if (!copyButton) {\n            return;\n        }\n\n        const popupElement = document.createElement('div');\n        popupElement.innerText = 'copied';\n        popupElement.classList.add('code-button__tooltip');\n        popupElement.classList.add(TOOLTIP_STATE_INACTIVE);\n        let closePopupTimer = -1;\n\n        copyButton.appendChild(popupElement);\n        copyButton.addEventListener('click', () => {\n            const tempElement = document.createElement('textarea');\n            tempElement.style.position = 'fixed';\n            document.body.appendChild(tempElement);\n            const text = highlightElement.innerText.trim();\n            tempElement.value = text;\n            tempElement.select();\n\n            try {\n                const successful = document.execCommand('copy');\n                if (!successful) {\n                    throw new Error('Failed to copy');\n                }\n\n                popupElement.classList.replace(TOOLTIP_STATE_INACTIVE, TOOLTIP_STATE_ACTIVE);\n                closePopupTimer = cancelAndWait(() => {\n                    popupElement.classList.replace(TOOLTIP_STATE_ACTIVE, TOOLTIP_STATE_INACTIVE);\n                }, closePopupTimer, 1500);\n            } catch (err) {\n                console.error(err);\n            }\n\n            document.body.removeChild(tempElement);\n\n            reportAnalytics('Codeblock Copied', {'code': text});\n        });\n    }\n}\n","import * as util from './util';\n\n/* Wrapper around XMLHttpRequest to make it more convenient\n * Calls options.success(response, url), providing the response text and\n *         the canonical URL after redirects.\n * Calls options.error() on error.\n * jQuery's wrapper does not supply XMLHttpRequest.responseURL, making\n * this rewrite necessary. */\nfunction xhrGet(url, options) {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onload = function() {\n        if (xhr.status >= 200 && xhr.status < 400) {\n            options.success(xhr.responseText, xhr.responseURL);\n            options.complete();\n        } else {\n            options.error();\n            options.complete();\n        }\n    };\n\n    xhr.onerror = function() {\n        options.error();\n        options.complete();\n    };\n\n    xhr.open('GET', url, true);\n    try {\n        xhr.send();\n    } catch (err) {\n        options.error();\n        options.complete();\n    }\n}\n\n// If the browser is sufficiently modern, make navbar links load only\n// content pieces to avoid a full page load.\nexport function setup(fastNav) {\n    if (window.history === undefined ||\n        document.querySelectorAll === undefined ||\n        document.body.classList === undefined ||\n        (new XMLHttpRequest()).responseURL === undefined) {\n        return false;\n    }\n\n    let navRootElement = document.querySelector('.sphinxsidebarwrapper');\n    let bodyElement = document.querySelector('.body');\n    let curLoading = {};\n\n    // Set up initial state so we can return to our initial landing page.\n    window.history.replaceState({'href': window.location.href},\n        document.querySelector('title').textContent,\n        window.location.href);\n\n    // Stop loading the currently-in-progress page.\n    function abortLoading() {\n        if (curLoading.timeoutID !== undefined) {\n            window.clearTimeout(curLoading.timeoutID);\n        }\n\n        if (curLoading.xhr !== undefined) {\n            curLoading.xhr.abort();\n        }\n\n        curLoading = {};\n    }\n\n    // Load the specified URL.\n    function loadPage(href, createHistory) {\n        if (href === undefined) {\n            console.error('Going to undefined path');\n        }\n\n        abortLoading();\n        bodyElement.classList.add('loading');\n\n        // If something goes wrong while loading, we don't want to leave\n        // people without a paddle. If we can't load after a long period of\n        // time, bring back the original content.\n        curLoading.timeoutID = window.setTimeout(() => {\n            bodyElement.classList.remove('loading');\n            curLoading.timeoutID = -1;\n        }, 10000);\n\n        const startTime = new Date();\n        curLoading.xhr = xhrGet(href, {\n            'complete': () => {\n                abortLoading();\n            },\n            'error': (error) => {\n            // Some browsers consider any file://-type request to be cross-origin.\n            // Upon any kind of error, fall back to classic behavior\n                console.error(`Failed to load ${href}`);\n                window.location = href;\n            },\n            'success': (pageText, trueUrl) => {\n                const enlapsedMs = (new Date()) - startTime;\n                bodyElement.classList.remove('loading');\n\n                // Change URL before loading the DOM to properly resolve URLs\n                if (createHistory) {\n                    window.history.pushState({'href': trueUrl}, '', trueUrl);\n                }\n\n                const page = document.createElement('html');\n                page.innerHTML = pageText;\n                const title = page.querySelector('title').textContent;\n                const newBody = page.querySelector('.body');\n                const newNav = page.querySelector('.sphinxsidebarwrapper');\n\n                // Fade in ONLY if we had enough time to start fading out.\n                if (enlapsedMs > (250 / 4)) {\n                    newBody.classList.add('loading');\n                }\n\n                // Replace the DOM elements\n                bodyElement.parentElement.replaceChild(newBody, bodyElement);\n                bodyElement = newBody;\n                navRootElement.parentElement.replaceChild(newNav, navRootElement);\n                navRootElement = newNav;\n                document.title = title;\n\n                // Update dynamic page features\n                fastNav.update();\n\n                if (window.history.onnavigate) {\n                    window.history.onnavigate();\n                }\n\n                // Prime the new DOM so that we can set up our fade-in\n                // animation and scroll the new contents to the top.\n                window.setTimeout(() => {\n                    bodyElement.classList.remove('loading');\n\n                    // Scroll to the top of the page only if this is a new history entry.\n                    if (createHistory) {\n                        window.scroll(0, 0);\n                    }\n                }, 1);\n            }\n        });\n    }\n\n    // Set up fastnav links\n    const nodes = document.querySelectorAll('.sphinxsidebarwrapper > ul a.reference.internal');\n    function handleClickFunction(ev) {\n        // Ignore anything but vanilla click events, so that people can\n        // still use special browser behaviors like open in new tab.\n        if (!(ev.button !== 0 || ev.shiftKey || ev.altKey || ev.metaKey || ev.ctrlKey)) {\n            ev.preventDefault();\n            loadPage(ev.currentTarget.href, true);\n        }\n    }\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (!util.isLeafNode($(node)) && !util.requiresPageload($(node))) { continue; }\n\n        node.addEventListener('click', handleClickFunction);\n    }\n\n    window.onpopstate = function(ev) {\n        if (ev.state === null) { return; }\n        loadPage(ev.state.href, false);\n    };\n\n\n    return true;\n}\n","function noop() {}\n\nfunction assign(tar, src) {\n\tfor (var k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction appendNode(node, target) {\n\ttarget.appendChild(node);\n}\n\nfunction insertNode(node, target, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detachNode(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detachBetween(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detachBefore(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detachAfter(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction reinsertBetween(before, after, target) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\ttarget.appendChild(before.parentNode.removeChild(before.nextSibling));\n\t}\n}\n\nfunction reinsertChildren(parent, target) {\n\twhile (parent.firstChild) target.appendChild(parent.firstChild);\n}\n\nfunction reinsertAfter(before, target) {\n\twhile (before.nextSibling) target.appendChild(before.nextSibling);\n}\n\nfunction reinsertBefore(after, target) {\n\tvar parent = after.parentNode;\n\twhile (parent.firstChild !== after) target.appendChild(parent.firstChild);\n}\n\nfunction destroyEach(iterations) {\n\tfor (var i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d();\n\t}\n}\n\nfunction createFragment() {\n\treturn document.createDocumentFragment();\n}\n\nfunction createElement(name) {\n\treturn document.createElement(name);\n}\n\nfunction createSvgElement(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createText(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction createComment() {\n\treturn document.createComment('');\n}\n\nfunction addListener(node, event, handler) {\n\tnode.addEventListener(event, handler, false);\n}\n\nfunction removeListener(node, event, handler) {\n\tnode.removeEventListener(event, handler, false);\n}\n\nfunction setAttribute(node, attribute, value) {\n\tnode.setAttribute(attribute, value);\n}\n\nfunction setAttributes(node, attributes) {\n\tfor (var key in attributes) {\n\t\tif (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tif (attributes[key] === undefined) removeAttribute(node, key);\n\t\t\telse setAttribute(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction removeAttribute(node, attribute) {\n\tnode.removeAttribute(attribute);\n}\n\nfunction setXlinkAttribute(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction getBindingGroupValue(group) {\n\tvar value = [];\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction toNumber(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction timeRangesToArray(ranges) {\n\tvar array = [];\n\tfor (var i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children (element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claimElement (nodes, name, attributes, svg) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (var j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tvar attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? createSvgElement(name) : createElement(name);\n}\n\nfunction claimText (nodes, data) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn createText(data);\n}\n\nfunction setInputType(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {}\n}\n\nfunction setStyle(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction selectOption(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction selectOptions(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction selectValue(select) {\n\tvar selectedOption = select.querySelector(':checked') || select.options[0];\n\treturn selectedOption && selectedOption.__value;\n}\n\nfunction selectMultipleValue(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), function(option) {\n\t\treturn option.__value;\n\t});\n}\n\nfunction destroyBlock(block, lookup) {\n\tblock.u();\n\tblock.d();\n\tlookup[block.key] = null;\n}\n\nfunction outroAndDestroyBlock(block, lookup) {\n\tblock.o(function() {\n\t\tdestroyBlock(block, lookup);\n\t});\n}\n\nfunction updateKeyedEach(old_blocks, component, changed, key_prop, dynamic, list, lookup, node, has_outro, create_each_block, intro_method, next, get_context) {\n\tvar o = old_blocks.length;\n\tvar n = list.length;\n\n\tvar i = o;\n\tvar old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tvar new_blocks = [];\n\tvar new_lookup = {};\n\tvar deltas = {};\n\n\tvar i = n;\n\twhile (i--) {\n\t\tvar key = list[i][key_prop];\n\t\tvar block = lookup[key];\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(component, key, get_context(i));\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, get_context(i));\n\t\t}\n\n\t\tnew_blocks[i] = new_lookup[key] = block;\n\n\t\tif (key in old_indexes) deltas[key] = Math.abs(i - old_indexes[key]);\n\t}\n\n\tvar will_move = {};\n\tvar did_move = {};\n\n\tvar destroy = has_outro ? outroAndDestroyBlock : destroyBlock;\n\n\tfunction insert(block) {\n\t\tblock[intro_method](node, next);\n\t\tlookup[block.key] = block;\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tvar new_block = new_blocks[n - 1];\n\t\tvar old_block = old_blocks[o - 1];\n\t\tvar new_key = new_block.key;\n\t\tvar old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup[old_key]) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup[new_key] || will_move[new_key]) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move[old_key]) {\n\t\t\to--;\n\n\t\t} else if (deltas[new_key] > deltas[old_key]) {\n\t\t\tdid_move[new_key] = true;\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move[old_key] = true;\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tvar old_block = old_blocks[o];\n\t\tif (!new_lookup[old_block.key]) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction getSpreadUpdate(levels, updates) {\n\tvar update = {};\n\n\tvar to_null_out = {};\n\tvar accounted_for = {};\n\n\tvar i = levels.length;\n\twhile (i--) {\n\t\tvar o = levels[i];\n\t\tvar n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (var key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (var key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (var key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\nfunction linear(t) {\n\treturn t;\n}\n\nfunction generateRule(\n\ta,\n\tb,\n\tdelta,\n\tduration,\n\tease,\n\tfn\n) {\n\tvar keyframes = '{\\n';\n\n\tfor (var p = 0; p <= 1; p += 16.666 / duration) {\n\t\tvar t = a + delta * ease(p);\n\t\tkeyframes += p * 100 + '%{' + fn(t) + '}\\n';\n\t}\n\n\treturn keyframes + '100% {' + fn(b) + '}\\n}';\n}\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tvar hash = 5381;\n\tvar i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction wrapTransition(component, node, fn, params, intro, outgroup) {\n\tvar obj = fn(node, params);\n\tvar duration = obj.duration || 300;\n\tvar ease = obj.easing || linear;\n\tvar cssText;\n\n\t// TODO share <style> tag between all transitions?\n\tif (obj.css && !transitionManager.stylesheet) {\n\t\tvar style = createElement('style');\n\t\tdocument.head.appendChild(style);\n\t\ttransitionManager.stylesheet = style.sheet;\n\t}\n\n\tif (intro) {\n\t\tif (obj.css && obj.delay) {\n\t\t\tcssText = node.style.cssText;\n\t\t\tnode.style.cssText += obj.css(0);\n\t\t}\n\n\t\tif (obj.tick) obj.tick(0);\n\t}\n\n\treturn {\n\t\tt: intro ? 0 : 1,\n\t\trunning: false,\n\t\tprogram: null,\n\t\tpending: null,\n\t\trun: function(intro, callback) {\n\t\t\tvar program = {\n\t\t\t\tstart: window.performance.now() + (obj.delay || 0),\n\t\t\t\tintro: intro,\n\t\t\t\tcallback: callback\n\t\t\t};\n\n\t\t\tif (obj.delay) {\n\t\t\t\tthis.pending = program;\n\t\t\t} else {\n\t\t\t\tthis.start(program);\n\t\t\t}\n\n\t\t\tif (!this.running) {\n\t\t\t\tthis.running = true;\n\t\t\t\ttransitionManager.add(this);\n\t\t\t}\n\t\t},\n\t\tstart: function(program) {\n\t\t\tcomponent.fire(program.intro ? 'intro.start' : 'outro.start', { node: node });\n\n\t\t\tprogram.a = this.t;\n\t\t\tprogram.b = program.intro ? 1 : 0;\n\t\t\tprogram.delta = program.b - program.a;\n\t\t\tprogram.duration = duration * Math.abs(program.b - program.a);\n\t\t\tprogram.end = program.start + program.duration;\n\n\t\t\tif (obj.css) {\n\t\t\t\tif (obj.delay) node.style.cssText = cssText;\n\n\t\t\t\tprogram.rule = generateRule(\n\t\t\t\t\tprogram.a,\n\t\t\t\t\tprogram.b,\n\t\t\t\t\tprogram.delta,\n\t\t\t\t\tprogram.duration,\n\t\t\t\t\tease,\n\t\t\t\t\tobj.css\n\t\t\t\t);\n\n\t\t\t\ttransitionManager.addRule(program.rule, program.name = '__svelte_' + hash(program.rule));\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(function(anim) {\n\t\t\t\t\t\t// when introing, discard old animations if there are any\n\t\t\t\t\t\treturn anim && (program.delta < 0 || !/__svelte/.test(anim));\n\t\t\t\t\t})\n\t\t\t\t\t.concat(program.name + ' ' + program.duration + 'ms linear 1 forwards')\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tthis.program = program;\n\t\t\tthis.pending = null;\n\t\t},\n\t\tupdate: function(now) {\n\t\t\tvar program = this.program;\n\t\t\tif (!program) return;\n\n\t\t\tvar p = now - program.start;\n\t\t\tthis.t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (obj.tick) obj.tick(this.t);\n\t\t},\n\t\tdone: function() {\n\t\t\tvar program = this.program;\n\t\t\tthis.t = program.b;\n\t\t\tif (obj.tick) obj.tick(this.t);\n\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\tprogram.callback();\n\t\t\tprogram = null;\n\t\t\tthis.running = !!this.pending;\n\t\t},\n\t\tabort: function() {\n\t\t\tif (obj.tick) obj.tick(1);\n\t\t\tif (obj.css) transitionManager.deleteRule(node, this.program.name);\n\t\t\tthis.program = this.pending = null;\n\t\t\tthis.running = false;\n\t\t}\n\t};\n}\n\nvar transitionManager = {\n\trunning: false,\n\ttransitions: [],\n\tbound: null,\n\tstylesheet: null,\n\tactiveRules: {},\n\n\tadd: function(transition) {\n\t\tthis.transitions.push(transition);\n\n\t\tif (!this.running) {\n\t\t\tthis.running = true;\n\t\t\trequestAnimationFrame(this.bound || (this.bound = this.next.bind(this)));\n\t\t}\n\t},\n\n\taddRule: function(rule, name) {\n\t\tif (!this.activeRules[name]) {\n\t\t\tthis.activeRules[name] = true;\n\t\t\tthis.stylesheet.insertRule('@keyframes ' + name + ' ' + rule, this.stylesheet.cssRules.length);\n\t\t}\n\t},\n\n\tnext: function() {\n\t\tthis.running = false;\n\n\t\tvar now = window.performance.now();\n\t\tvar i = this.transitions.length;\n\n\t\twhile (i--) {\n\t\t\tvar transition = this.transitions[i];\n\n\t\t\tif (transition.program && now >= transition.program.end) {\n\t\t\t\ttransition.done();\n\t\t\t}\n\n\t\t\tif (transition.pending && now >= transition.pending.start) {\n\t\t\t\ttransition.start(transition.pending);\n\t\t\t}\n\n\t\t\tif (transition.running) {\n\t\t\t\ttransition.update(now);\n\t\t\t\tthis.running = true;\n\t\t\t} else if (!transition.pending) {\n\t\t\t\tthis.transitions.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (this.running) {\n\t\t\trequestAnimationFrame(this.bound);\n\t\t} else if (this.stylesheet) {\n\t\t\tvar i = this.stylesheet.cssRules.length;\n\t\t\twhile (i--) this.stylesheet.deleteRule(i);\n\t\t\tthis.activeRules = {};\n\t\t}\n\t},\n\n\tdeleteRule: function(node, name) {\n\t\tnode.style.animation = node.style.animation\n\t\t\t.split(', ')\n\t\t\t.filter(function(anim) {\n\t\t\t\treturn anim.indexOf(name) === -1;\n\t\t\t})\n\t\t\t.join(', ');\n\t}\n};\n\nfunction blankObject() {\n\treturn Object.create(null);\n}\n\nfunction destroy(detach) {\n\tthis.destroy = noop;\n\tthis.fire('destroy');\n\tthis.set = this.get = noop;\n\n\tif (detach !== false) this._fragment.u();\n\tthis._fragment.d();\n\tthis._fragment = this._state = null;\n}\n\nfunction destroyDev(detach) {\n\tdestroy.call(this, detach);\n\tthis.destroy = function() {\n\t\tconsole.warn('Component was already destroyed');\n\t};\n}\n\nfunction _differs(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction _differsImmutable(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction fire(eventName, data) {\n\tvar handlers =\n\t\teventName in this._handlers && this._handlers[eventName].slice();\n\tif (!handlers) return;\n\n\tfor (var i = 0; i < handlers.length; i += 1) {\n\t\tvar handler = handlers[i];\n\n\t\tif (!handler.__calling) {\n\t\t\thandler.__calling = true;\n\t\t\thandler.call(this, data);\n\t\t\thandler.__calling = false;\n\t\t}\n\t}\n}\n\nfunction getDev(key) {\n\tif (key) console.warn(\"`let x = component.get('x')` is deprecated. Use `let { x } = component.get()` instead\");\n\treturn get.call(this, key);\n}\n\nfunction get(key) {\n\treturn key ? this._state[key] : this._state;\n}\n\nfunction init(component, options) {\n\tcomponent._handlers = blankObject();\n\tcomponent._bind = options._bind;\n\n\tcomponent.options = options;\n\tcomponent.root = options.root || component;\n\tcomponent.store = component.root.store || options.store;\n}\n\nfunction observe(key, callback, options) {\n\tvar fn = callback.bind(this);\n\n\tif (!options || options.init !== false) {\n\t\tfn(this.get()[key], undefined);\n\t}\n\n\treturn this.on(options && options.defer ? 'update' : 'state', function(event) {\n\t\tif (event.changed[key]) fn(event.current[key], event.previous && event.previous[key]);\n\t});\n}\n\nfunction observeDev(key, callback, options) {\n\tconsole.warn(\"this.observe(key, (newValue, oldValue) => {...}) is deprecated. Use\\n\\n  // runs before DOM updates\\n  this.on('state', ({ changed, current, previous }) => {...});\\n\\n  // runs after DOM updates\\n  this.on('update', ...);\\n\\n...or add the observe method from the svelte-extras package\");\n\n\tvar c = (key = '' + key).search(/[.[]/);\n\tif (c > -1) {\n\t\tvar message =\n\t\t\t'The first argument to component.observe(...) must be the name of a top-level property';\n\t\tif (c > 0)\n\t\t\tmessage += \", i.e. '\" + key.slice(0, c) + \"' rather than '\" + key + \"'\";\n\n\t\tthrow new Error(message);\n\t}\n\n\treturn observe.call(this, key, callback, options);\n}\n\nfunction on(eventName, handler) {\n\tif (eventName === 'teardown') return this.on('destroy', handler);\n\n\tvar handlers = this._handlers[eventName] || (this._handlers[eventName] = []);\n\thandlers.push(handler);\n\n\treturn {\n\t\tcancel: function() {\n\t\t\tvar index = handlers.indexOf(handler);\n\t\t\tif (~index) handlers.splice(index, 1);\n\t\t}\n\t};\n}\n\nfunction onDev(eventName, handler) {\n\tif (eventName === 'teardown') {\n\t\tconsole.warn(\n\t\t\t\"Use component.on('destroy', ...) instead of component.on('teardown', ...) which has been deprecated and will be unsupported in Svelte 2\"\n\t\t);\n\t\treturn this.on('destroy', handler);\n\t}\n\n\treturn on.call(this, eventName, handler);\n}\n\nfunction run(fn) {\n\tfn();\n}\n\nfunction set(newState) {\n\tthis._set(assign({}, newState));\n\tif (this.root._lock) return;\n\tthis.root._lock = true;\n\tcallAll(this.root._beforecreate);\n\tcallAll(this.root._oncreate);\n\tcallAll(this.root._aftercreate);\n\tthis.root._lock = false;\n}\n\nfunction _set(newState) {\n\tvar oldState = this._state,\n\t\tchanged = {},\n\t\tdirty = false;\n\n\tfor (var key in newState) {\n\t\tif (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;\n\t}\n\tif (!dirty) return;\n\n\tthis._state = assign(assign({}, oldState), newState);\n\tthis._recompute(changed, this._state);\n\tif (this._bind) this._bind(changed, this._state);\n\n\tif (this._fragment) {\n\t\tthis.fire(\"state\", { changed: changed, current: this._state, previous: oldState });\n\t\tthis._fragment.p(changed, this._state);\n\t\tthis.fire(\"update\", { changed: changed, current: this._state, previous: oldState });\n\t}\n}\n\nfunction setDev(newState) {\n\tif (typeof newState !== 'object') {\n\t\tthrow new Error(\n\t\t\tthis._debugName + '.set was called without an object of data key-values to update.'\n\t\t);\n\t}\n\n\tthis._checkReadOnly(newState);\n\tset.call(this, newState);\n}\n\nfunction callAll(fns) {\n\twhile (fns && fns.length) fns.shift()();\n}\n\nfunction _mount(target, anchor) {\n\tthis._fragment[this._fragment.i ? 'i' : 'm'](target, anchor || null);\n}\n\nfunction _unmount() {\n\tif (this._fragment) this._fragment.u();\n}\n\nfunction isPromise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nvar PENDING = {};\nvar SUCCESS = {};\nvar FAILURE = {};\n\nfunction removeFromStore() {\n\tthis.store._remove(this);\n}\n\nvar proto = {\n\tdestroy: destroy,\n\tget: get,\n\tfire: fire,\n\tobserve: observe,\n\ton: on,\n\tset: set,\n\tteardown: destroy,\n\t_recompute: noop,\n\t_set: _set,\n\t_mount: _mount,\n\t_unmount: _unmount,\n\t_differs: _differs\n};\n\nvar protoDev = {\n\tdestroy: destroyDev,\n\tget: getDev,\n\tfire: fire,\n\tobserve: observeDev,\n\ton: onDev,\n\tset: setDev,\n\tteardown: destroyDev,\n\t_recompute: noop,\n\t_set: _set,\n\t_mount: _mount,\n\t_unmount: _unmount,\n\t_differs: _differs\n};\n\nexport { blankObject, destroy, destroyDev, _differs, _differsImmutable, fire, getDev, get, init, observe, observeDev, on, onDev, run, set, _set, setDev, callAll, _mount, _unmount, isPromise, PENDING, SUCCESS, FAILURE, removeFromStore, proto, protoDev, appendNode, insertNode, detachNode, detachBetween, detachBefore, detachAfter, reinsertBetween, reinsertChildren, reinsertAfter, reinsertBefore, destroyEach, createFragment, createElement, createSvgElement, createText, createComment, addListener, removeListener, setAttribute, setAttributes, removeAttribute, setXlinkAttribute, getBindingGroupValue, toNumber, timeRangesToArray, children, claimElement, claimText, setInputType, setStyle, selectOption, selectOptions, selectValue, selectMultipleValue, destroyBlock, outroAndDestroyBlock, updateKeyedEach, getSpreadUpdate, linear, generateRule, hash, wrapTransition, transitionManager, noop, assign };\n","<div>{{{ caption }}}</div>\n<div>\n    <span class=\"switch fa fa-thumbs-up good {{ upvoteSelected }}\" on:click=\"change(true)\"></span>\n    <span class=\"switch fa fa-thumbs-down bad {{ downvoteSelected }}\" on:click=\"change(false)\"></span>\n</div>\n\n<script>\nexport default {\n    data: function () {\n        return {\n            name: '',\n            caption: '',\n            answer: null,\n        }\n    },\n\n    methods: {\n        change: function(value) {\n            this.set({answer: value})\n            this.fire('change', value)\n        }\n    },\n\n    computed: {\n        upvoteSelected: (answer) => answer === true ? 'selected' : '',\n        downvoteSelected: (answer) => answer === false ? 'selected' : ''\n    }\n}\n</script>\n","<textarea placeholder=\"{{ caption }}\" on:input=\"fire('change', answer)\" bind:value=\"answer\"></textarea>\n\n<script>\nexport default {\n    data: function () {\n        return {\n            name: '',\n            caption: '',\n            answer: ''\n        }\n    },\n\n    methods: {\n        change: function() {\n            this.fire('change', this.get('answer'))\n        }\n    },\n}\n</script>\n","<div class=\"{{ delugeClass }}\">\n    <div class=\"{{ delugeHeaderClass }}\" on:click='toggle()'>\n    {{ #if state === 'Initial' }}\n        <span class=\"fa fa-comments deluge-comment-icon\"></span>\n    {{ /if }}\n\n        <span class=\"deluge-helpful\">Was this page helpful?</span>\n\n    {{ #if state !== 'Initial' }}\n        <span class=\"fa fa-angle-down deluge-close-icon\"></span>\n    {{ /if }}\n    </div>\n\n    <div class=\"{{ delugeBodyClass }}\">\n    {{ #if state === 'Voted-Up' || state === 'Voted-Down' }}\n        <p>Thank you for your feedback!</p>\n    {{ /if }}\n\n    {{ #if state === 'Voted-Down' }}\n        <p>If this page contains an error, you may <a class=\"deluge-fix-button jira-link jirafeedback\" target=\"_blank\" title=\"Report a problem with {{ pagename }} on Jira\" on:click=\"showCollectorDialog()\">report the problem on Jira.</a></p>\n    {{ elseif state == 'Pending '}}\n        <p>Submitting feedback...</p>\n    {{ elseif state === 'NotVoted' }}\n        <a id=\"rate-up\" on:click=\"rate(true)\" class=\"deluge-vote-button\">Yes</a>\n        <a id=\"rate-down\" on:click=\"rate(false)\" class=\"deluge-vote-button\">No</a>\n    {{ elseif typeof state === 'boolean' }}\n        <div class=\"deluge-questions\">\n            <ul ref>\n            {{ #if state === false }}\n                <li>We're sorry! Please help us improve this page.</li>\n            {{ /if }}\n            {{ #each questions as question }}\n                <li>\n                {{ #if question.type === 'binary' }}\n                    <BinaryQuestion name=\"{{ question.name }}\" caption=\"{{ question.caption }}\" on:change=\"update(question.name, event)\" />\n                {{ elseif question.type === 'freeform' }}\n                    <FreeformQuestion name=\"{{ question.name }}\" caption=\"{{ question.caption }}\" on:change=\"update(question.name, event)\" />\n                {{ /if }}\n                </li>\n            {{ /each }}\n            </ul>\n\n            <div class=\"deluge-button-group\">\n                <button on:click=\"toggle()\">Cancel</button>\n                <button class=\"primary\" on:click=\"submit()\">Submit</button>\n            </div>\n        </div>\n    {{ /if }}\n    </div>\n</div>\n\n<script>\nimport BinaryQuestion from './BinaryQuestion.html';\nimport FreeformQuestion from './FreeformQuestion.html';\n\nfunction loadJira(jiraurl) {\n    const scriptElement = document.createElement('script')\n    scriptElement.type = 'application/javascript'\n    scriptElement.src = jiraurl\n    document.body.appendChild(scriptElement)\n}\n\nexport default {\n    data: function () {\n        return {\n            project: '',\n            pagename: '',\n            state: 'Initial',\n            jiraurl: 'https://jira.mongodb.org/s/en_UScn8g8x/782/6/1.2.5/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?collectorId=298ba4e7',\n            questions: [],\n            answers: {},\n        }\n    },\n\n    computed: {\n        delugeClass: function(state) {\n            if (state === 'Initial') { return 'deluge' }\n            return 'deluge deluge-expanded'\n        },\n        delugeHeaderClass: function(state) {\n            if (state === 'Initial') { return 'deluge-header' }\n            return 'deluge-header deluge-header-expanded'\n        },\n        delugeBodyClass: function(state) {\n            if (state === 'Initial') { return 'deluge-body' }\n            return 'deluge-body deluge-body-expanded'\n        }\n    },\n\n    methods: {\n        open: function() {\n            if (this.get('state') === 'Initial') {\n                this.set({answers: {}})\n                this.set({'state': 'NotVoted'})\n            }\n        },\n        toggle: function() {\n            this.set({answers: {}})\n\n            if (this.get('state') === 'Initial') {\n                this.set({'state': 'NotVoted'})\n            } else {\n                this.set({'state': 'Initial'})\n            }\n        },\n        submit: function() {\n            const vote = this.get('state')\n            if (typeof vote !== 'boolean') {\n                throw new Error('Assertion failed: Feedback submitted without vote')\n            }\n\n            const fields = {}\n            const answers = this.get('answers')\n            for (const question of Object.keys(answers)) {\n                const answer = answers[question]\n                if (answer !== null && answer !== undefined) {\n                    fields[question] = answer\n                }\n            }\n\n            this.set({state: 'Pending'})\n            this.fire('submit', {\n                vote, fields\n            })\n        },\n        rate: function(value) {\n            this.set({'state': value})\n        },\n        addQuestion: function(type, name, caption) {\n            this.set({questions: this.get('questions').concat({\n                type: type,\n                name: name,\n                caption: caption\n            })})\n\n            return this\n        },\n        update: function(questionName, answer) {\n            this.get('answers')[questionName] = answer\n        },\n        showCollectorDialog: function() {\n            window.ATL_JQ_PAGE_PROPS = {\n                triggerFunction: function(showFunc) {\n                    window.setTimeout(() => showFunc(), 1)\n                },\n                fieldValues: {'summary': `Comment on: \"${this.get('project')}/${this.get('pagename')}\"`}\n            }\n\n            if (!window.jQuery) {\n                const scriptElement = document.createElement('script')\n                scriptElement.type = 'application/javascript'\n                scriptElement.integrity = 'sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44='\n                scriptElement.setAttribute('crossorigin', 'anonymous')\n                scriptElement.src = 'https://code.jquery.com/jquery-2.2.4.min.js'\n                scriptElement.onload = () => {\n                    loadJira(this.get('jiraurl'))\n                }\n                document.body.appendChild(scriptElement)\n            } else {\n                loadJira(this.get('jiraurl'))\n            }\n        }\n    },\n\n    components: {\n        BinaryQuestion,\n        FreeformQuestion\n    }\n}\n</script>\n","import MainWidget from './components/MainWidget.html';\n\nconst FEEDBACK_URL = 'http://deluge.us-east-1.elasticbeanstalk.com/'\n\nfunction addQueryParameters(url/*: string*/, parameters)/*: string*/ {\n    const queryComponents = []\n\n    for (const key of Object.keys(parameters)) {\n        const value = parameters[key]\n        queryComponents.push(`${encodeURIComponent(key)}=${encodeURIComponent(JSON.stringify(value))}`)\n    }\n\n    return url + '?' + queryComponents.join('&')\n}\n\nexport class Deluge {\n    constructor(project/*: string*/, path/*: string*/, root/*: HTMLElement*/) {\n        this.project = project\n        this.path = path\n\n        this.app = new MainWidget({\n            target: root,\n            data: {\n                state: 'Initial',\n                project: project,\n                pagename: path,\n            }\n        })\n\n        this.app.on('submit', event => {\n            this.sendRating(event.vote, event.fields).then(() => {\n                if (event.vote) {\n                    this.app.set({state: 'Voted-Up'})\n                } else {\n                    this.app.set({state: 'Voted-Down'})\n                }\n            }).catch((err) => {\n                console.error('Error submitting feedback')\n            })\n        })\n    }\n\n    askQuestion(name/*: string*/, html/*: string*/)/*: Deluge*/ {\n        this.app.addQuestion('binary', name, html)\n        return this\n    }\n\n    askFreeformQuestion(name/*: string*/, caption/*: string*/)/*: Deluge*/ {\n        this.app.addQuestion('freeform', name, caption)\n        return this\n    }\n\n    sendRating(vote/*: boolean*/, fields)/*: Promise<void>*/ {\n        const path = `${this.project}/${this.path}`\n\n        // Report to Segment\n        const analyticsData = {'useful': vote}\n        for (const fieldName of Object.keys(fields)) {\n            analyticsData[fieldName] = fields[fieldName]\n        }\n        try {\n            window.analytics.track('Feedback Submitted', analyticsData)\n        } catch (err) {\n            console.error(err)\n        }\n\n        // Report to Deluge\n        return new Promise((resolve, reject) => {\n            fields.v = vote\n            fields.p = path\n            const url = addQueryParameters(FEEDBACK_URL, fields)\n\n            // Report this rating using an image GET to work around the\n            // same-origin policy\n            const img = new Image()\n            img.onload = () => {\n                return resolve()\n            }\n            img.onerror = () => {\n                return reject()\n            }\n            img.src = url\n        })\n    }\n\n    open() {\n        this.app.open()\n    }\n}\n","import {Deluge} from 'rigning';\n\nlet project = null;\n\n// Files on which we should not have feedback widgets\nconst blacklist = {\n    'meta/404': true,\n    'search': true\n};\n\nfunction loadPage() {\n    const bodyElements = document.getElementsByClassName('body');\n    if (!bodyElements.length) { return; }\n\n    const pagename = bodyElements[0].getAttribute('data-pagename');\n    if (Object.prototype.hasOwnProperty.call(blacklist, pagename)) {\n        return;\n    }\n\n    const ratingPanelElement = document.getElementById('rating-panel');\n    if (!ratingPanelElement) { return; }\n\n    ratingPanelElement.innerText = '';\n    if (ratingPanelElement) {\n        (new Deluge(project, pagename, ratingPanelElement)).\n            askFreeformQuestion('reason', 'What were you looking for?').\n            askQuestion('findability', 'Did you find it?').\n            askQuestion('accuracy', 'Was the information you found <strong>accurate</strong>?').\n            askQuestion('clarity', 'Was the information <strong>clear</strong>?').\n            askQuestion('fragmentation', 'Was the information you needed <strong>' +\n                        'all on one page</strong>?');\n    }\n}\n\nexport function init() {\n    project = document.body.getAttribute('data-project');\n}\n\nexport function setup() {\n    // We require DOM storage. Don't show anything if support is not present.\n    if (window.localStorage === undefined) { return; }\n\n    loadPage();\n}\n","import {Dispatcher, reportAnalytics, toArray} from './util';\n\nexport const tabsEventDispatcher = new Dispatcher();\n\n/**\n * Show only the first set of tabs at the top of the page.\n * @returns {void}\n */\nfunction hideTabBars() {\n    const isTop = document.querySelector('.tabs-top');\n    if (isTop) {\n        const tabBars = $('.tab-strip--singleton');\n        const mainTabBar = tabBars.first();\n        // Remove any additional tab bars\n        tabBars.slice(1).\n            detach();\n        // Position the main tab bar after the page title\n        mainTabBar.\n            detach().\n            insertAfter('h1').\n            first();\n    }\n}\n\n/**\n * Return the tabPref object containing preferences for tab sets\n * and page specific prefs. Returns an empty object if it doesn't\n * exist.\n * @returns {object} Tab preference object.\n */\nexport function getTabPref() {\n    return JSON.parse(window.localStorage.getItem('tabPref')) || {};\n}\n\n/**\n * Sets the tabPref object depending on whether the tab belongs\n * to set (e.g., \"drivers\") or if it's a one-off page.\n\n * @param {object} pref The \"tabId\" and \"type\" (tab set)\n * @param {boolean} anonymous Whether or not the tab being configured is anonymous.\n * @returns {void}\n */\nexport function setTabPref(pref, anonymous) {\n    const tabPref = getTabPref();\n\n    if (anonymous) {\n        if (!tabPref.pages) {\n            tabPref.pages = {};\n        }\n\n        tabPref.pages[window.location.pathname] = pref.tabId;\n    } else {\n        // Set top-level fields for tab set preferences\n        tabPref[pref.type] = pref.tabId;\n    }\n\n    // Write pref object back to localStorage\n    window.localStorage.setItem('tabPref', JSON.stringify(tabPref));\n}\n\nlet tabSets = {};\nclass TabSet {\n    constructor(tabType, anonymous, tabStripElements, tabContents) {\n        this.type = tabType;\n        this.tabStrips = tabStripElements;\n        this.tabContents = tabContents;\n        this.anonymous = anonymous;\n\n        // A set of all tabIds contained within this TabSet.\n        this.tabIds = {};\n    }\n\n    /**\n     * Return the first singleton tab ID on the page.\n     * @returns {string} The first singleton tab ID found.\n     */\n    getFirstTabId() {\n        const tabsElement = this.tabStrips[0].\n            querySelector('.tab-strip__element[aria-selected=true]');\n        if (!tabsElement) { return null; }\n\n        return tabsElement.getAttribute('data-tabid');\n    }\n\n    setup() {\n        if (this.tabStrips.length === 0) { return; }\n\n        hideTabBars();\n\n        for (const tabStrip of this.tabStrips) {\n            for (const element of tabStrip.querySelectorAll('[data-tabid]')) {\n                this.tabIds[element.getAttribute('data-tabid')] = true;\n\n                element.onclick = (e) => {\n                    // Get the initial position of the tab clicked\n                    // to avoid page jumping after new tab is selected\n                    const initRect = element.getBoundingClientRect();\n\n                    // Get the position where the user scrolled to\n                    const initScrollY = window.scrollY;\n\n                    // Calc the distance from the tab strip to the top\n                    // of whatever the user has scrolled to\n                    const offset = initScrollY - initRect.y;\n\n                    // Get the tab ID of the clicked tab\n                    const tabId = e.target.getAttribute('data-tabid');\n\n                    // Build the pref object to set\n                    const pref = {};\n                    pref.tabId = tabId;\n                    pref.type = this.type;\n\n                    // Check to make sure value is not null, i.e., don't do anything on \"other\"\n                    if (tabId) {\n                        // Save the users preference and re-render\n                        this.update(tabId, true);\n\n                        // Get the position of tab strip after re-render\n                        const rects = element.getBoundingClientRect();\n\n                        // Reset the scroll position of the browser\n                        window.scrollTo(rects.x, rects.y + offset);\n\n                        reportAnalytics('Tab Selected', {\n                            'tabId': tabId,\n                            'title': e.target.innerText,\n                            'tabSet': this.type\n                        });\n\n                        e.preventDefault();\n                    }\n                };\n            }\n        }\n\n        this.update(null, false);\n    }\n\n    update(tabId, isUserAction) {\n        if (this.tabStrips.length === 0) { return; }\n\n        if (!tabId) {\n            const tabPref = getTabPref();\n            if (this.anonymous && tabPref.pages && tabPref.pages[window.location.pathname]) {\n                // Check if current page has a one-off page specific pref\n                tabId = tabPref.pages[window.location.pathname];\n            } else if (tabPref[this.type]) {\n                tabId = tabPref[this.type];\n            }\n        }\n\n        if (!tabId || !this.tabIds[tabId]) {\n            tabId = this.getFirstTabId();\n\n            if (!tabId) { return; }\n        }\n\n        // Show the appropriate tab content and mark the tab as active\n        tabsEventDispatcher.dispatch({\n            'isUserAction': isUserAction,\n            'tabId': tabId,\n            'type': this.type\n        });\n    }\n\n    /**\n     * Marks the selected tab as active, handles special cases for the dropdown\n     * @param {string} currentAttrValue The currently selected tab ID.\n     * @returns {void}\n     */\n    showHideSelectedTab(currentAttrValue) {\n        for (const tabStrip of this.tabStrips) {\n            // Get the <a>, <li> and <ul> of the selected tab\n            const tabLink = $(tabStrip.querySelector(`[data-tabid=\"${currentAttrValue}\"]`));\n            if (!tabLink.length) {\n                continue;\n            }\n\n            const tabList = tabLink.parent('ul');\n\n            // Get the dropdown <a> and <li> for active and label management\n            const dropdownLink = $(tabStrip.querySelector('.dropdown-toggle'));\n            const dropdownListItem = $(tabStrip.querySelector('.dropdown'));\n\n            // Set the active tab, if it's on the dropdown set it to active and change label\n            if (tabList.hasClass('dropdown-menu')) {\n                // Use first so text doesn't repeat if more than one set of tabs\n                dropdownLink.text(`${tabLink.first().text()}`).append('<span class=\"caret\"></span>');\n                dropdownListItem.\n                    attr('aria-selected', true).\n                    siblings().\n                    attr('aria-selected', false);\n            } else {\n                // Set a non-dropdown tab to active, and change the dropdown label back to \"Other\"\n                tabLink.\n                    attr('aria-selected', true).\n                    siblings().\n                    attr('aria-selected', false);\n                dropdownLink.text('Other ').append('<span class=\"caret\"></span>');\n            }\n        }\n\n        const className = `tabpanel-${currentAttrValue}`;\n        for (const contentElement of this.tabContents) {\n            for (const childElement of contentElement.children) {\n                if (childElement.classList.contains(className)) {\n                    childElement.style.display = 'block';\n                } else {\n                    childElement.style.display = 'none';\n                }\n            }\n        }\n    }\n\n    static register(tabElement) {\n        const tabStripElements = toArray(tabElement.getElementsByClassName('tab-strip--singleton'));\n        const tabContent = tabElement.querySelector('.tabs__content');\n        let tabType = tabElement.getAttribute('data-tab-preference');\n        let anonymous = false;\n\n        // If there is no specified tab type, use the first tab's ID\n        if (!tabType) {\n            const firstTabidElement = tabElement.querySelector('[data-tabid]');\n            if (!firstTabidElement) { return; }\n\n            tabType = `anonymous-${firstTabidElement.getAttribute('data-tabid')}`;\n            anonymous = true;\n        }\n\n        if (tabSets[tabType]) {\n            const tabSet = tabSets[tabType];\n            tabSet.tabStrips = tabSet.tabStrips.concat(tabStripElements);\n            tabSet.tabContents.push(tabContent);\n            return;\n        }\n\n        const tabSet = new TabSet(tabType, anonymous, tabStripElements, [tabContent], false);\n        tabSets[tabType] = tabSet;\n    }\n}\n\n// Listen for state changes necessitating a redraw\ntabsEventDispatcher.listen((ctx) => {\n    const tabSet = tabSets[ctx.type];\n    if (tabSet) {\n        // Only save our new preference if we are responding to user input.\n        if (ctx.isUserAction) {\n            setTabPref(ctx, tabSet.anonymous);\n        }\n\n        tabSet.showHideSelectedTab(ctx.tabId);\n    }\n});\n\n// Create tab functionality for code examples\nexport function setup() {\n    tabSets = {};\n\n    const tabsElements = document.getElementsByClassName('tabs');\n    for (let i = 0; i < tabsElements.length; i += 1) {\n        TabSet.register(tabsElements[i]);\n    }\n\n    for (const tabType of Object.keys(tabSets)) {\n        tabSets[tabType].setup();\n    }\n}\n","import {setTabPref, tabsEventDispatcher} from './componentTabs';\nimport {throttle} from './util';\n\nconst headings = [];\n\nfunction recalculate() {\n    const height = document.body.clientHeight - window.innerHeight;\n\n    // This is a bit hacky, but it mostly works. Choose our current\n    // position in the page as a decimal in the range [0, 1], adding\n    // our window size multiplied by 80% of the unadjusted [0, 1]\n    // position.\n    // The 80% is necessary because the last sections of a guide tend to\n    // be shorter, and we need to make sure that scrolling to the bottom\n    // highlights the last section.\n    let currentPosition = document.documentElement.scrollTop / height;\n    currentPosition = (document.documentElement.scrollTop +\n        (currentPosition * 0.8 * window.innerHeight)) / height;\n\n    let bestMatch = [Infinity, null];\n\n    for (const [headingElement, tocElement] of headings) {\n        tocElement.classList.remove('active');\n\n        const headingPosition = headingElement.offsetTop / height;\n        const delta = Math.abs(headingPosition - currentPosition);\n        if (delta <= bestMatch[0]) {\n            bestMatch = [delta, tocElement];\n        }\n    }\n\n    if (bestMatch[1]) {\n        bestMatch[1].classList.add('active');\n    }\n}\n\ndocument.addEventListener('scroll', throttle(recalculate, 150));\n\nfunction setupScrollMonitor() {\n    const leftToc = document.querySelector('.left-toc');\n    if (!leftToc) { return; }\n\n    headings.length = 0;\n    for (const linkElement of leftToc.querySelectorAll('a')) {\n        const id = linkElement.getAttribute('href').slice(1);\n        if (!id) { continue; }\n\n        const headingElement = document.getElementById(id);\n        if (!headingElement) { continue; }\n\n        headings.push([headingElement, linkElement.parentElement]);\n    }\n\n    recalculate();\n}\n\nfunction pillClickHandler(ev) {\n    const tabId = ev.target.getAttribute('data-tab-preference');\n    if (!tabId) { return; }\n\n    setTabPref({\n        'tabId': tabId,\n        'type': 'languages'\n    }, false);\n}\n\nfunction setupLandingPage() {\n    const guidesCategoryListElement = document.getElementsByClassName('guide-category-list')[0];\n    if (!guidesCategoryListElement) { return; }\n\n    const pills = guidesCategoryListElement.getElementsByClassName('guide__pill');\n    for (let i = 0; i < pills.length; i += 1) {\n        pills[i].onclick = pillClickHandler;\n    }\n}\n\n// Guides show the current language in the tab preferences header. Update\n// that if necessary.\nconst showCurrentLanguageElements = document.getElementsByClassName('show-current-language');\ntabsEventDispatcher.listen((ctx) => {\n    if (ctx.type !== 'languages') { return; }\n\n    for (let i = 0; i < showCurrentLanguageElements.length; i += 1) {\n        showCurrentLanguageElements[i].innerText = ctx.tabId;\n    }\n});\n\nexport function setup() {\n    setupScrollMonitor();\n    setupLandingPage();\n}\n","const CLASS_ACTIVATED = 'lightbox__content--activated';\nconst CLASS_SCALABLE = 'lightbox__content--scalable';\n\nconst modal = document.createElement('div');\nmodal.className = 'lightbox__modal';\nmodal.title = 'click to close';\nconst modalContent = document.createElement('img');\nmodalContent.className = 'lightbox__content';\nmodal.appendChild(modalContent);\n\nfunction closeLightbox(ev) {\n    if (ev.type === 'keydown' && ev.key !== 'Escape') {\n        return;\n    }\n\n    modalContent.classList.remove(CLASS_ACTIVATED);\n    if (!modal.parentNode) {\n        return;\n    }\n\n    modal.parentNode.removeChild(modal);\n}\n\n// Wrap an image in a lightbox\nfunction wrapImage(img) {\n    const wrapperElement = document.createElement('div');\n    const captionElement = document.createElement('div');\n\n    wrapperElement.className = 'lightbox__imageWrapper';\n    captionElement.className = 'lightbox__caption';\n    captionElement.innerText = 'click to enlarge';\n\n    img.parentNode.replaceChild(wrapperElement, img);\n    wrapperElement.appendChild(img);\n    wrapperElement.appendChild(captionElement);\n\n    wrapperElement.addEventListener('click', () => {\n        document.body.appendChild(modal);\n        modalContent.src = img.src;\n        modalContent.alt = `${img.alt} — Enlarged`;\n\n        if ((/\\.svg$/).test(modalContent.src)) {\n            modalContent.classList.add(CLASS_SCALABLE);\n        } else {\n            modalContent.classList.remove(CLASS_SCALABLE);\n        }\n\n        modal.addEventListener('click', closeLightbox);\n\n        // Wait until the next DOM tick to make the fade animation work\n        setTimeout(() => {\n            modalContent.classList.add(CLASS_ACTIVATED);\n        }, 0);\n    });\n}\n\n// Intelligently wrap a figure in a lightbox if its natural area is >10%\n// larger than displayed.\nfunction wrapIfNeeded(figure, img) {\n    const naturalArea = img.naturalWidth * img.naturalHeight;\n    const clientArea = img.clientWidth * img.clientHeight;\n    if (clientArea < (naturalArea * 0.9)) {\n        wrapImage(img);\n        figure.classList.add('lightbox');\n    }\n}\n\nexport function setup() {\n    for (const figure of document.getElementsByClassName('lightbox')) {\n        if (figure.children.length === 0 || figure.children[0].tagName !== 'IMG') {\n            continue;\n        }\n\n        wrapImage(figure.children[0]);\n    }\n\n    // Now look at all non-explicitly-lightbox figures to see if they need\n    // the same treatment.\n    for (const figure of document.getElementsByClassName('figure')) {\n        if (figure.children.length === 0 ||\n            figure.children[0].tagName !== 'IMG' ||\n            figure.classList.contains('lightbox')) {\n            continue;\n        }\n\n        const img = figure.children[0];\n\n        if (img.complete) {\n            wrapIfNeeded(figure, img);\n        } else {\n            img.addEventListener('load', wrapIfNeeded.bind(null, figure, img));\n        }\n    }\n\n    // Register our escape handler. This is idempotent\n    document.addEventListener('keydown', closeLightbox);\n}\n","const COLLAPSED_PROPERTY = 'apiref-resource--collapsed';\n\n// We want to let users select a path without toggling the resource's\n// stage (open vs. collapsed). Only consider an event a click if the cursor\n// moved less than 50 pixels in either direction before the button is lifted.\nfunction createClickButNotSelectionHandler(element, onclick) {\n    let dragStart = null;\n\n    element.addEventListener('mousedown', (ev) => {\n        if (ev.button !== 0) { return; }\n        dragStart = ev;\n    });\n\n    element.addEventListener('mouseup', (ev) => {\n        if (ev.button !== 0) { return; }\n        const formerDragStart = dragStart;\n        dragStart = null;\n\n        if (!formerDragStart || (\n            Math.abs(ev.clientX - formerDragStart.clientX) < 50 &&\n            Math.abs(ev.clientY - formerDragStart.clientY) < 50)) {\n            onclick();\n        }\n    });\n}\n\nfunction toggleResource(classListAction, resourceElement) {\n    if (resourceElement.id) {\n        const hash = `#${resourceElement.id}`;\n        window.history.pushState({'href': hash}, '', hash);\n    }\n\n    resourceElement.classList[classListAction](COLLAPSED_PROPERTY);\n}\n\nfunction expand() {\n    const hash = document.location.hash.slice(1);\n    if (!hash) { return; }\n    const requested = document.getElementById(hash);\n    if (!requested) { return; }\n    if (!requested.classList.contains('apiref-resource')) { return; }\n    toggleResource('remove', requested);\n}\n\nwindow.addEventListener('hashchange', expand, false);\n\nexport function setup() {\n    const resourceHeaderElements = document.getElementsByClassName('apiref-resource__header');\n    for (let i = 0; i < resourceHeaderElements.length; i += 1) {\n        const element = resourceHeaderElements[i];\n        createClickButNotSelectionHandler(element,\n            toggleResource.bind(null, 'toggle', element.parentElement));\n    }\n\n    expand();\n}\n","import {reportAnalytics, toArray} from './util';\nimport {tabsEventDispatcher} from './componentTabs';\n\nfunction pillClickHandler(tabType, ev) {\n    const tabId = ev.target.getAttribute('data-tabid');\n    tabsEventDispatcher.dispatch({\n        'isUserAction': true,\n        'tabId': tabId,\n        'type': tabType\n    });\n\n    reportAnalytics('Pill Selected', {\n        'tabId': tabId,\n        'title': ev.target.innerText,\n        'pillSet': tabType\n    });\n}\n\nlet tabTypes = {};\ntabsEventDispatcher.listen((ctx) => {\n    for (const pillStripElement of tabTypes[ctx.type] || []) {\n        const elements = pillStripElement.getElementsByClassName('guide__pill');\n        for (let i = 0; i < elements.length; i += 1) {\n            const element = elements[i];\n            if (element.getAttribute('data-tabid') === ctx.tabId) {\n                elements[i].classList.add('guide__pill--active');\n            } else {\n                elements[i].classList.remove('guide__pill--active');\n            }\n        }\n    }\n});\n\nexport function setup() {\n    tabTypes = {};\n    for (const pillStripElement of document.querySelectorAll('.pillstrip-declaration')) {\n        const tabsType = pillStripElement.getAttribute('data-tab-preference');\n        if (!tabsType) { continue; }\n\n        if (tabTypes[tabsType] === undefined) { tabTypes[tabsType] = []; }\n        tabTypes[tabsType].push(pillStripElement);\n    }\n\n    for (const tabsType of Object.keys(tabTypes)) {\n        const pillStripElements = tabTypes[tabsType];\n        const tabStrips = document.querySelectorAll(`.tabs[data-tab-preference=\"${tabsType}\"] > .tab-strip`);\n        const seenPills = {};\n        const pills = [];\n\n        for (const tabStripElement of tabStrips) {\n            tabStripElement.style.display = 'none';\n\n            let i = -1;\n            let childElements = toArray(\n                tabStripElement.querySelectorAll('.tab-strip__element[data-tabid]'));\n            childElements = childElements.concat(\n                toArray(\n                    tabStripElement.querySelectorAll('.tab-strip__dropdown > li')));\n            for (const childElement of childElements) {\n                i += 1;\n                const tabId = childElement.getAttribute('data-tabid');\n                if (seenPills[tabId] !== undefined) {\n                    continue;\n                }\n\n                seenPills[tabId] = true;\n                pills.splice(i, 0, [tabId, childElement.innerText]);\n            }\n        }\n\n        const clickHandler = pillClickHandler.bind(undefined, tabsType);\n        for (const strip of pillStripElements) {\n            for (const [tabId, tabTitle] of pills) {\n                const pill = document.createElement('li');\n                pill.className = 'guide__pill';\n                pill.setAttribute('data-tabid', tabId);\n                pill.innerText = tabTitle;\n                pill.onclick = clickHandler;\n                strip.appendChild(pill);\n            }\n        }\n    }\n}\n","import * as util from './util';\n\n/* currently open page */\nfunction isCurrentNode($node) {\n    return $node.hasClass('current');\n}\n\nexport function setup() {\n    let $current = $('.sidebar a.current');\n    if (util.isLeafNode($current) || util.requiresPageload($current) || isCurrentNode($current)) {\n        $current.parent('li').addClass('selected-item');\n    }\n    $current.parents('ul').each((index, el) => {\n        $(el).css('display', 'block');\n    });\n\n    $('.sphinxsidebarwrapper > ul li:not(.current) > ul:not(.current)').hide();\n    $('.sphinxsidebarwrapper').show();\n\n    /*\n     * This event handler defines the left-column navigation's behavior\n     * The logic conforms to how sphinx generates the markup\n     * The rules are:\n     *  $('a.current') is the title of the content that is currently rendered\n     *    (this should never be changed client-side)\n     *  $('ul.current, li.current') are the set of lists that are currently expanded\n     *  $('li.selected-item') is the currently highlighted item\n     */\n    $('.sphinxsidebarwrapper .toctree-l1').on('click', 'a', (e) => {\n        const $target = $(e.currentTarget);\n        if (util.isLeafNode($target)) {\n            // Do a full page reload on leaf nodes\n            return;\n        }\n\n        // Release notes has special behavior to click through\n        if (!$target.parent().hasClass('selected-item') && util.requiresPageload($target)) {\n            return;\n        }\n\n        e.preventDefault();\n\n        if ($target.parent().hasClass('current')) {\n            // collapse target node\n            $target.parent().removeClass('current selected-item');\n            $target.siblings('ul').slideUp();\n        } else {\n\n            $current.parent().removeClass('selected-item');\n            // roll up all navigation up to the common ancestor\n            $current.parents().\n                add($current.siblings('ul')).\n                each((index, el) => {\n                    const $el = $(el);\n                    if ($el.has(e.currentTarget).length) {\n                        return;\n                    }\n\n                    if ($el.is('ul')) {\n                        $el.removeClass('current').slideUp();\n                    } else {\n                        $el.removeClass('current');\n                    }\n                });\n            // add css classes for the new 'current' nav item\n            $target.parent().addClass('current');\n            $target.siblings('ul').slideDown(() => {\n                if (util.isLeafNode($target) ||\n                    util.requiresPageload($target) ||\n                    isCurrentNode($current)) {\n                    $target.parent('li').addClass('selected-item');\n                }\n            });\n            // set new $current\n            $current = $target;\n        }\n    });\n\n    /* Add expand icons to indicate what's expandable and what's a link. This\n       is necessary when (1) we're at a leaf node, or (2) the menu triggers\n       a page load. */\n    $('.sphinxsidebarwrapper > ul ul a.reference').prepend(function(index) {\n        const expandElement = $('<span class=\"expand-icon\"></span>');\n        const self = $(this);\n\n        if (!util.isLeafNode(self)) {\n            expandElement.addClass('docs-expand-arrow');\n        }\n\n        return expandElement;\n    });\n}\n","const SAMPLE_FACTORS = {\n    'charts': 0.12158,\n    'guides': 0.02644,\n    'stitch': 0.03162,\n    'docs-ruby': 0.47984,\n    'ecosystem': 0.00997,\n    'docs-php-library': 0.04165,\n    'atlas': 0.01176,\n    'compass': 0.01684,\n    'manual': 0.00022,\n    'landing': 0.00806,\n    'mongoid': 0.07576,\n    'mms-cloud': 0.06358,\n    'mms-onprem': 0.01790,\n    'bi-connector': 0.03912,\n    'spark-connector': 0.05562\n};\n\nexport function initialize() {\n    /* eslint-disable */\n\n    // Delighted\n    !function(e,t,r,n,a){if(!e[a]){for(var i=e[a]=[],s=0;s<r.length;s++){var c=r[s];i[c]=i[c]||function(e){return function(){var t=Array.prototype.slice.call(arguments);i.push([e,t])}}(c)}i.SNIPPET_VERSION=\"1.0.1\";var o=t.createElement(\"script\");o.type=\"text/javascript\",o.async=!0,o.src=\"https://d2yyd1h5u9mauk.cloudfront.net/integrations/web/v1/library/\"+n+\"/\"+a+\".js\";var l=t.getElementsByTagName(\"script\")[0];l.parentNode.insertBefore(o,l)}}(window,document,[\"survey\",\"reset\",\"config\",\"init\",\"set\",\"get\",\"event\",\"identify\",\"track\",\"page\",\"screen\",\"group\",\"alias\"],\"Dk30CC86ba0nATlK\",\"delighted\");\n\n    // Segment\n    !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"once\",\"off\",\"on\"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t,e){var n=document.createElement(\"script\");n.type=\"text/javascript\";n.async=!0;n.src=\"https://cdn.segment.com/analytics.js/v1/\"+t+\"/analytics.min.js\";var a=document.getElementsByTagName(\"script\")[0];a.parentNode.insertBefore(n,a);analytics._loadOptions=e};analytics.SNIPPET_VERSION=\"4.1.0\";\n        analytics.load(\"aGhVvyxnPWlyP71vVl9ZjGWxAtoVGLXX\");\n    }}();\n}\n\nexport function setup(fastNav) {\n    const project = document.body.getAttribute('data-project');\n    const branch = document.body.getAttribute('data-branch');\n\n    try {\n        const sampleFactor = SAMPLE_FACTORS[project] || 0.1;\n        window.delighted.survey({\n            minTimeOnPage: 180,\n            sampleFactor: sampleFactor,\n            properties: {\n              project,\n              branch,\n            }\n        });\n    } catch (err) {\n        console.error(err);\n    }\n\n    // Update Segment\n    try {\n        window.analytics.page({\n          path: location.pathname,\n          url: location.href,\n          project: project,\n          branch: branch\n        });\n    } catch (err) {\n        console.error(err);\n    }\n}\n","import {getTabPref, tabsEventDispatcher} from './componentTabs';\n\nconst STYLE_SELECTED = 'guide__deploymentpill--active';\nconst STYLE = 'guide__pill';\nconst STYLE_DEPLOY = 'guide__deploymentpill';\nconst STYLE_DEPLOYTEXT = 'show-current-deployment';\n\n\nfunction setToggleState(id) {\n    const elements = document.getElementsByClassName(STYLE);\n    for (let i = 0; i < elements.length; i += 1) {\n        const element = elements[i];\n        if (element.getAttribute('data-tabid') === id) {\n            elements[i].classList.add(STYLE_SELECTED);\n        } else {\n            elements[i].classList.remove(STYLE_SELECTED);\n        }\n    }\n    if (document.getElementsByClassName(STYLE_DEPLOYTEXT).length > 0) {\n        document.getElementsByClassName(STYLE_DEPLOYTEXT)[0].innerHTML = id;\n    }\n}\n\ntabsEventDispatcher.listen((ctx) => {\n    if (ctx.type === 'cloud') {\n        setToggleState(ctx.tabId);\n    }\n});\n\nfunction dispatchState(cloudState) {\n    tabsEventDispatcher.dispatch({\n        'isUserAction': true,\n        'tabId': cloudState,\n        'type': 'cloud'\n    });\n}\n\nfunction addListenersToPills(element) {\n    element.addEventListener('click', (event) => {\n        tabsEventDispatcher.dispatch({\n            'isUserAction': true,\n            'tabId': event.target.innerHTML,\n            'type': 'cloud'\n        });\n    });\n}\n\nfunction getTabNode(nodeName, pref) {\n    const element = document.createElement('li');\n    element.classList.add(STYLE);\n    element.classList.add(STYLE_DEPLOY);\n    element.setAttribute('data-tabid', nodeName);\n    element.innerHTML = nodeName;\n    addListenersToPills(element);\n    setToggleState(nodeName);\n    return element;\n}\n\nexport function setup() {\n    // we use a sort of reflection to figure out if this needs to display\n\n    const parent = document.getElementsByClassName('guide-prefs__deploy')[0];\n    if (parent === undefined) {\n        return;\n    }\n    if (document.getElementsByClassName('tabpanel-cloud').length === 0 &&\n        document.getElementsByClassName('guide-prefs__deploy').length > 0) {\n        document.getElementsByClassName('guide-prefs__deploy')[0].style.display = 'none';\n        return;\n    }\n    const tabPrefs = getTabPref();\n    if (tabPrefs.cloud === undefined) {\n        tabPrefs.cloud = 'local';\n    }\n    // setToggleState(tabPrefs.cloud);\n    const list = document.createElement('ul');\n    list.classList.add('guide__pills');\n    list.classList.add('pillstrip-declaration');\n    list.setAttribute('role', 'tablist');\n    list.setAttribute('data-tab-preference', 'cloud');\n    list.appendChild(getTabNode('cloud', tabPrefs.cloud));\n    list.appendChild(getTabNode('local', tabPrefs.cloud));\n    parent.appendChild(list);\n    setToggleState(tabPrefs.cloud);\n    dispatchState(tabPrefs.cloud);\n}\n","import {tabsEventDispatcher} from './componentTabs';\n\nconst LOCALSTORAGE_KEY_LOCAL = 'uriwriter_local';\nconst LOCALSTORAGE_KEY_ATLAS = 'uriwriter_atlas';\nconst LOCALSTORAGE_KEY_CURRENT_STATE = 'uriwriter_currentstate';\n\nconst TEMPLATE_TYPE_SELF_MANAGED = 'local MongoDB';\nconst TEMPLATE_TYPE_REPLICA_SET = 'local MongoDB with replica set';\nconst TEMPLATE_TYPE_ATLAS_36 = 'Atlas (Cloud) v. 3.6';\nconst TEMPLATE_TYPE_ATLAS_34 = 'Atlas (Cloud) v. 3.4';\nconst TEMPLATE_TYPE_ATLAS = 'Atlas (Cloud)';\n\nconst TEMPLATES = {\n    [TEMPLATE_TYPE_SELF_MANAGED]: {\n        'options': [\n            {\n                'name': 'authSource',\n                'type': 'text'\n            }\n        ],\n        'template': 'mongodb://$[username]:$[password]@$[hostlist]/$[database]?$[options]',\n        'templatePasswordRedactedShell': 'mongodb://$[hostlist]/$[database]?$[options] --username $[username]',\n        'templateShell': 'mongodb://$[username]:$[password]@$[hostlist]/$[database]?$[options]'\n    },\n    [TEMPLATE_TYPE_REPLICA_SET]: {\n        'options': [\n            {\n                'name': 'replicaSet',\n                'type': 'text'\n            },\n            {\n                'name': 'authSource',\n                'type': 'text'\n            },\n            {\n                'name': 'ssl',\n                'type': 'pass-through',\n                'value': 'true'\n            }\n        ],\n        'template': 'mongodb://$[username]:$[password]@$[hostlist]/$[database]?$[options]',\n        'templatePasswordRedactedShell': 'mongodb://$[hostlist]/$[database]?$[options] --username $[username] --password',\n        'templateShell': 'mongodb://$[username]:$[password]@$[hostlist]/$[database]?$[options]'\n    },\n    [TEMPLATE_TYPE_ATLAS_36]: {\n        'options': [],\n        'template': 'mongodb+srv://$[username]:$[password]@$[hostlist]/$[database]?retryWrites=true',\n        'templatePasswordRedactedShell': 'mongodb+srv://$[hostlist]/$[database] --username $[username] --password',\n        'templateShell': 'mongodb+srv://$[username]:$[password]@$[hostlist]/$[database]'\n    },\n    [TEMPLATE_TYPE_ATLAS_34]: {\n        'options': [\n            {\n                'name': 'replicaSet',\n                'type': 'text'\n            },\n            {\n                'name': 'authSource',\n                'type': 'text'\n            },\n            {\n                'name': 'ssl',\n                'type': 'pass-through',\n                'value': 'true'\n            }\n        ],\n        'template': 'mongodb://$[username]:$[password]@$[hostlist]/$[database]?$[options]',\n        'templatePasswordRedactedShell': 'mongodb://$[hostlist]/$[database]?replicaSet=$[replicaSet] --ssl --authenticationDatabase $[authSource] --username $[username] --password',\n        'templateShell': 'mongodb://$[hostlist]/$[database]?replicaSet=$[replicaSet] --ssl --authenticationDatabase $[authSource] --username $[username] --password $[password]'\n    }\n};\n\nfunction getValue(value, option) {\n    if (option.type === 'pass-through') {\n        return option.value;\n    }\n\n    return value;\n}\n\nfunction getPrefix(uri) {\n    if ((uri.charAt(0) === '\\'') ||\n        (uri.charAt(0) === '\"')) {\n        return uri.charAt(0);\n    }\n    return '';\n}\n\nconst PLACEHOLDER_PATTERN =\n    /&lt;(?:(?:URISTRING(?:_(?:(?:SHELL_NOUSER)|(?:SHELL)))?)|(?:USERNAME))&gt;/g;\nfunction preparseUristrings() {\n    const elements = document.getElementsByTagName('pre');\n    for (let i = 0; i < elements.length; i += 1) {\n        elements[i].innerHTML = elements[i].innerHTML.replace(\n            PLACEHOLDER_PATTERN,\n            '<span class=\"uristring-element\">$&</span>');\n    }\n}\n\nfunction validateHost(host) {\n    const parsed = (/^\\s*([^:\\s]+)(?::(\\d+))?\\s*$/).exec(host);\n    if (!parsed) {\n        throw new Error('Invalid host format: must match the format \"hostname:port\"');\n    }\n\n    const port = parseInt(parsed[2], 10);\n    if (isNaN(port)) {\n        throw new Error('Missing port: host must match the format \"hostname:port\"');\n    }\n\n    if (port > 65535) {\n        throw new Error('Port number is too large');\n    }\n\n    return [parsed[1], port];\n}\n\nfunction conveyInvalidParse(statusElement) {\n    statusElement.classList.add('mongodb-form__status--invalid');\n    statusElement.classList.remove('mongodb-form__status--good');\n    statusElement.style.display = '';\n    statusElement.innerText = 'Connection string could not be parsed';\n    // do something? email?\n}\n\nfunction conveyValidParse(statusElement) {\n    statusElement.classList.add('mongodb-form__status--good');\n    statusElement.classList.remove('mongodb-form__status--invalid');\n    statusElement.style.display = '';\n    statusElement.innerText = 'Connection string parsed';\n}\n\nfunction splitOptions(tempWriter, arrayOfMatches) {\n    const settingsArray = arrayOfMatches.split('&');\n    if (settingsArray.length > 0) {\n        for (let i = 0; i < settingsArray.length; i += 1) {\n            const keyValue = settingsArray[i].split('=');\n            tempWriter[keyValue[0]] = keyValue[1];\n        }\n    }\n}\n\nclass HostList {\n    constructor(rootElement, uriWriter) {\n        this.root = rootElement;\n\n        this.uriWriter = uriWriter;\n        this.elementPairs = [];\n        this.updateHostsFromUriWriter();\n    }\n\n    get hosts() {\n        return this.elementPairs.map((pair) => pair[0].value.trim()).filter((host) => host);\n    }\n\n    get lastInput() {\n        return this.elementPairs[this.elementPairs.length - 1][0];\n    }\n\n    updateHostsFromUriWriter() {\n        this.elementPairs = [];\n        this.root.innerText = '';\n        const state = this.uriWriter.loadState(this.uriWriter.loadCurrentState());\n        for (const host of state.hostlist || []) {\n            this.addHost(host);\n        }\n\n        this.addHost();\n    }\n\n    addHost(host) {\n        const inputElement = document.createElement('input');\n        inputElement.className = 'mongodb-form__input';\n        inputElement.placeholder = 'localhost:27017';\n        inputElement.value = host || '';\n        const statusElement = document.createElement('div');\n        statusElement.className = 'mongodb-form__status';\n\n        inputElement.oninput = () => {\n            if (inputElement.value) {\n                if (this.lastInput === inputElement) {\n                    this.addHost();\n                }\n            } else if (this.lastInput !== inputElement) {\n                this.elementPairs = this.elementPairs.filter((x) => x[0] !== inputElement);\n                this.root.removeChild(inputElement);\n                this.root.removeChild(statusElement);\n\n                this.uriWriter.setHosts(this.hosts);\n                return;\n            }\n\n            try {\n                validateHost(inputElement.value);\n            } catch (err) {\n                inputElement.setCustomValidity(err.message);\n                statusElement.innerText = err.message;\n                statusElement.classList.add('mongodb-form__status--invalid');\n                return;\n            }\n\n            statusElement.innerText = '';\n            statusElement.classList.remove('mongodb-form__status--invalid');\n            inputElement.setCustomValidity('');\n\n            this.uriWriter.setHosts(this.hosts);\n        };\n\n        this.root.appendChild(inputElement);\n        this.root.appendChild(statusElement);\n        this.elementPairs.push([inputElement, statusElement]);\n    }\n}\n\nlet uriwriterSingleton = null;\nclass UriwriterSingleton {\n    constructor() {\n        // an array of DOM objects that care about changes to the URI\n        this.uristowrite = [];\n        this.usernamestowrite = [];\n        this.uristowritepasswordredactedshell = [];\n        this.uristowriteshell = [];\n        // this.uristringPasswordRedacted = 'mongodb://$[hostlist]/$[database]?$[options]';\n        this.urireplacestring = '';\n        this.options = {};\n\n        this.hostList = null;\n\n        // setup listeners on the page to changes in uri fields (view)\n        this.setupURIListeners();\n        // calculate and propagate the URI (controller)]\n        this.loadTemplateEnv();\n        this.renderURI();\n        this.registerDispatch();\n    }\n\n    loadTemplateEnv() {\n\n        if (this.loadState(this.loadCurrentState()).env === undefined) {\n            if (this.loadCurrentState() === 'local' ||\n                this.loadCurrentState() === 'undefined') {\n                this.saveState({'env': TEMPLATE_TYPE_SELF_MANAGED}, 'local');\n            } else {\n                this.saveState({'env': TEMPLATE_TYPE_ATLAS_36}, 'cloud');\n            }\n        }\n    }\n\n    // get stuff related to this component out of local storage\n    loadState(atlas) {\n        if (atlas === 'cloud') {\n            return JSON.parse(window.localStorage.getItem(LOCALSTORAGE_KEY_ATLAS)) || {};\n        }\n        return JSON.parse(window.localStorage.getItem(LOCALSTORAGE_KEY_LOCAL)) || {};\n    }\n\n    // put stuff related to this coponent in local storage, we only set\n    // the whole thing, not portions\n    saveState(state, atlas) {\n        if (atlas === 'cloud') {\n            window.localStorage.setItem(LOCALSTORAGE_KEY_ATLAS, JSON.stringify(state));\n        }\n        else {\n            window.localStorage.setItem(LOCALSTORAGE_KEY_LOCAL, JSON.stringify(state));\n        }\n    }\n\n    loadCurrentState() {\n        return window.localStorage.getItem(LOCALSTORAGE_KEY_CURRENT_STATE);\n    }\n\n    saveCurrentState(atlasState) {\n        window.localStorage.setItem(LOCALSTORAGE_KEY_CURRENT_STATE, atlasState);\n    }\n\n    // add or modify a value in our uriwriter in local storage.\n    addValue(key, value) {\n        const uriwriter = this.loadState(this.loadCurrentState());\n        if (key !== 'atlaspasteduri' && key !== 'env') {\n            delete uriwriter.atlaspasteduri;\n        }\n        uriwriter[key] = value;\n        this.saveState(uriwriter, this.loadCurrentState());\n    }\n\n    // setup view hooks to change when data or environment changes\n    setupURIListeners() {\n        preparseUristrings();\n        const list = document.getElementsByClassName('uristring-element');\n        for (let i = 0; i < list.length; i += 1) {\n            if (list[i].innerHTML.indexOf('&lt;URISTRING&gt;') > -1) {\n                this.uristowrite.push(list[i]);\n            }\n            if (list[i].innerHTML.indexOf('&lt;USERNAME&gt;') > -1) {\n                this.usernamestowrite.push(list[i]);\n            }\n            if (list[i].innerHTML.indexOf('&lt;URISTRING_SHELL&gt;') > -1) {\n                this.uristowriteshell.push(list[i]);\n            }\n            if (list[i].innerHTML.indexOf('&lt;URISTRING_SHELL_NOUSER&gt;') > -1) {\n                this.uristowritepasswordredactedshell.push(list[i]);\n            }\n        }\n    }\n\n    writeToPlaceholders() {\n        for (let i = 0; i < this.uristowrite.length; i += 1) {\n            const prefix = getPrefix(this.uristowrite[i].innerHTML);\n            this.uristowrite[i].innerHTML = `${prefix}${this.urireplacestring}${prefix}`;\n        }\n        for (let i = 0; i < this.uristowritepasswordredactedshell.length; i += 1) {\n            this.uristowritepasswordredactedshell[i].innerHTML =\n                this.urireplacestringPasswordRedactedShell;\n        }\n        for (let i = 0; i < this.uristowriteshell.length; i += 1) {\n            this.uristowriteshell[i].innerHTML = this.urireplacestringShell;\n        }\n        // node use case for separation of username out of uri for encoding\n        for (let i = 0; i < this.usernamestowrite.length; i += 1) {\n            this.usernamestowrite[i].innerHTML = this.username;\n        }\n    }\n\n    setEnvironment(env) {\n        const isAtlas = env.startsWith(TEMPLATE_TYPE_ATLAS);\n        if (isAtlas) {\n            this.saveCurrentState('cloud');\n        } else {\n            this.saveCurrentState('local');\n        }\n        const state = this.loadState(this.loadCurrentState());\n        const haveWidgetOnPage = Boolean(document.getElementById('uriwriter'));\n        if (isAtlas && haveWidgetOnPage) {\n            document.getElementsByClassName('atlascontrols__status')[0].style.display =\n                'none';\n\n            if (state.atlaspasteduri !== undefined) {\n                // move all of this to an encapsulating function;\n                this.parseIncomingAtlasString(state.atlaspasteduri);\n                this.renderURI();\n                this.populateForm();\n                return;\n            }\n        }\n\n        if ((state !== undefined &&\n            state.env !== undefined &&\n            state.env.startsWith(TEMPLATE_TYPE_ATLAS)) || isAtlas) {\n            // this.saveState({});\n\n            if (haveWidgetOnPage) {\n                this.hostList.updateHostsFromUriWriter();\n            }\n        }\n\n        this.addValue('env', env);\n        this.renderURI();\n\n        if (haveWidgetOnPage) {\n            this.populateForm();\n        }\n    }\n\n    toggleEnvironmentExternal(atlas) {\n        const element = document.getElementById('deployment_type');\n        if (atlas === 'cloud') {\n            element.style.display = 'none';\n        } else {\n            element.style.display = 'block';\n        }\n    }\n    // this is the listener that is triggered when an environment select happens\n    setupEnvironmentListeners() {\n        const elements = document.getElementsByClassName('uriwriter__toggle');\n        let initiallySelected = this.loadState(this.loadCurrentState()).env;\n        if (initiallySelected === TEMPLATE_TYPE_ATLAS_36 ||\n            initiallySelected === TEMPLATE_TYPE_ATLAS_34) {\n            initiallySelected = TEMPLATE_TYPE_ATLAS;\n        }\n\n        for (let i = 0; i < elements.length; i += 1) {\n            if (initiallySelected === elements[i].innerHTML) {\n                elements[i].classList.add('guide__pill--active');\n            }\n\n            elements[i].onclick = (event) => {\n                const element = event.target;\n\n                const parentChildren = element.parentElement.children;\n                for (let childIndex = 0; childIndex < parentChildren.length; childIndex += 1) {\n                    parentChildren[childIndex].classList.remove('guide__pill--active');\n                }\n\n                element.classList.add('guide__pill--active');\n                this.setEnvironment(element.innerHTML);\n            };\n        }\n    }\n\n    // controller for writing the uri out to the listening html\n    renderURI() {\n        // User is in Atlas placeholder mode, no template defined. Can't render a uri.\n        // or should we default?\n        if (this.loadState(this.loadCurrentState()).env === TEMPLATE_TYPE_ATLAS) {\n            this.addValue('env', TEMPLATE_TYPE_ATLAS_36);\n        }\n        // we have a basic idea of the environment, get the associated uri template\n        const template = TEMPLATES[this.loadState(this.loadCurrentState()).env];\n\n        if (!template) { return; }\n\n        // the placeholder uri string template\n        this.uristring = template.template;\n        // options are environment specific settings that need to go in the uri\n        this.options = template.options;\n        // no we do our replacing of template fields\n        this.urireplacestring = this.replaceString(this.uristring, '&');\n        // on the redacted one as well\n        this.urireplacestringShell = this.replaceString(template.templateShell, ',');\n        this.urireplacestringPasswordRedactedShell =\n            this.replaceString(template.templatePasswordRedactedShell, ',');\n        this.username = this.loadState(this.loadCurrentState()).username;\n        this.writeToPlaceholders();\n    }\n\n    optionStringifier(options, optionJoinCharacter) {\n        const parts = [];\n        const state = this.loadState(this.loadCurrentState());\n\n        for (let i = 0; i < this.options.length; i += 1) {\n            const option = this.options[i];\n            const name = option.name;\n            let value = getValue(state[name], option);\n            if (!value) {\n                if (option.placeholder) {\n                    value = option.placeholder;\n                } else {\n                    value = `$[${name}]`;\n                }\n            }\n            parts.push(`${name}=${value}`);\n        }\n\n        return parts.join(optionJoinCharacter);\n    }\n\n    replaceString(localUriString, optionJoinCharacter) {\n        const state = this.loadState(this.loadCurrentState());\n\n        // replace hardcoded plaments (why oh why do we do this????)\n        if (state.username) {\n            localUriString = localUriString.replace('$[username]', state.username);\n        }\n        if (state.database) {\n            localUriString = localUriString.replace('$[database]', state.database);\n        }\n        if (state.authSource) {\n            localUriString = localUriString.replace('$[authSource]', state.authSource);\n        }\n        if (state.replicaSet) {\n            localUriString = localUriString.replace('$[replicaSet]', state.replicaSet);\n        }\n\n        // replace options where they exist\n        const optionsString = this.optionStringifier(this.options, optionJoinCharacter);\n\n        if (optionsString.length > 0) {\n            localUriString = localUriString.replace('$[options]', optionsString);\n        }\n\n        // get our hosts and ports in\n        if (state.hostlist && state.hostlist.length > 0) {\n            localUriString = localUriString.replace('$[hostlist]', state.hostlist.join(','));\n        }\n\n        return localUriString;\n    }\n\n    renderOptions() {\n        const elements = document.getElementsByClassName('uriwriter__option-prompt');\n        while (elements.length > 0) {\n            elements[0].parentElement.removeChild(elements[0]);\n        }\n\n        if (this.options && this.options.length > 0) {\n            for (let i = 0; i < this.options.length; i += 1) {\n                if (this.options[i].type !== 'pass-through') {\n                    this.renderOption(this.options[i]);\n                }\n            }\n        }\n    }\n\n    renderOption(option) {\n        const optionElement = document.createElement('label');\n        optionElement.className = 'mongodb-form__prompt uriwriter__option-prompt';\n\n        const label = document.createElement('div');\n        label.className = 'mongodb-form__label';\n        label.innerText = option.name;\n\n        const inputElement = document.createElement('input');\n        inputElement.setAttribute('id', option.name);\n        if (option.placeholder) {\n            inputElement.setAttribute('placeholder', option.placeholder);\n        }\n        inputElement.className = 'mongodb-form__input';\n        if (this.loadState(this.loadCurrentState())[option.name] !== undefined) {\n            inputElement.value = this.loadState(this.loadCurrentState())[option.name];\n        }\n        inputElement.addEventListener('input', (event) => {\n            this.addValue(option.name, document.getElementById(option.name).value);\n            this.renderURI();\n        });\n\n        optionElement.appendChild(label);\n        optionElement.appendChild(inputElement);\n\n        const serverPromptElement = document.querySelector('[data-server-configuration]');\n        serverPromptElement.parentElement.insertBefore(optionElement, serverPromptElement);\n    }\n\n    initializeWidget() {\n        if (!document.getElementById('uriwriter')) {\n            return;\n        }\n\n        this.hostList = new HostList(document.getElementById('hostlist'), this);\n\n        document.getElementById('uriwriter_username').addEventListener('input', (event) => {\n            this.addValue('username', event.target.value);\n            this.renderURI();\n        });\n\n        const atlaspaste = document.getElementById('uriwriter_atlaspaste');\n        const statusElement = document.getElementsByClassName('atlascontrols__status')[0];\n\n        atlaspaste.oninput = (event) => {\n            const pastedValue = atlaspaste.value;\n            if (!pastedValue.trim()) {\n                statusElement.style.display = 'none';\n                atlaspaste.setCustomValidity('');\n                return;\n            }\n\n            if (!this.parseIncomingAtlasString(pastedValue)) {\n                atlaspaste.setCustomValidity('Failed to parse');\n                conveyInvalidParse(statusElement);\n            } else {\n                atlaspaste.setCustomValidity('');\n                this.addValue('atlaspasteduri', pastedValue);\n                conveyValidParse(statusElement);\n                this.renderURI();\n                this.populateForm();\n            }\n        };\n\n        document.getElementById('uriwriter_db').addEventListener('input', (event) => {\n            this.addValue('database', document.getElementById('uriwriter_db').value);\n            this.renderURI();\n        });\n        this.setupEnvironmentListeners();\n        this.populateForm();\n    }\n\n    renderFormValues() {\n        const state = this.loadState(this.loadCurrentState());\n        const atlasControlsElement = document.getElementsByClassName('uriwriter__atlascontrols')[0];\n        if (state.env === TEMPLATE_TYPE_SELF_MANAGED || state.env === TEMPLATE_TYPE_REPLICA_SET) {\n            atlasControlsElement.style.display = 'none';\n            document.getElementById('userinfo_form').style.display = '';\n        } else {\n            document.getElementById('uriwriter_atlaspaste').value = state.atlaspasteduri || '';\n\n            if (state.atlaspasteduri !== undefined) {\n                atlasControlsElement.style.display = '';\n            } else {\n                atlasControlsElement.style.display = 'none';\n            }\n\n            document.getElementById('userinfo_form').style.display = 'none';\n            atlasControlsElement.style.display = '';\n            return;\n        }\n        if (state.username !== undefined) {\n            document.getElementById('uriwriter_username').value = state.username;\n        }\n        if (state.database !== undefined) {\n            document.getElementById('uriwriter_db').value = state.database;\n        }\n    }\n\n    /** IP related functions **/\n\n    setHosts(hostlist) {\n        const uriwriter = this.loadState(this.loadCurrentState());\n        uriwriter.hostlist = hostlist;\n        this.saveState(uriwriter, this.loadCurrentState());\n        this.renderURI();\n    }\n\n    populateForm() {\n        this.toggleEnvironmentExternal(this.loadCurrentState());\n        this.renderOptions();\n        this.renderFormValues();\n        this.hostList = new HostList(document.getElementById('hostlist'), this);\n    }\n\n    registerDispatch() {\n        tabsEventDispatcher.listen((ctx) => {\n            if (!uriwriterSingleton) { return; }\n            this.renderURI();\n            if (ctx.type !== 'cloud') { return; }\n            // tricky: we only want to change the pill state on toggle\n            if (ctx.tabId === 'cloud') {\n                if (this.loadCurrentState() === 'cloud') { return; }\n                this.saveCurrentState('cloud');\n                this.loadTemplateEnv();\n                this.renderURI();\n                // this.toggleEnvironmentExternal('cloud');\n            } else {\n                if (this.loadCurrentState() === 'local') { return; }\n                this.saveCurrentState('local');\n                this.loadTemplateEnv();\n                this.renderURI();\n                // this.toggleEnvironmentExternal('local');\n            }\n            const haveWidgetOnPage = Boolean(document.getElementById('uriwriter'));\n            if (haveWidgetOnPage) {\n                this.populateForm();\n            }\n        });\n    }\n\n\n    /** Atlas copy paste parse and processing **/\n\n    parseOutShellParams(splitOnSpace, tempWriter) {\n        // go through all of the command line args, parse\n        for (let i = 0; i < splitOnSpace.length; i += 1) {\n            if (splitOnSpace[i].startsWith('--')) {\n                // this is a key, if next val does not begin with --, its a value\n                if (!splitOnSpace[i + 1].startsWith('--')) {\n                    let splitKey = splitOnSpace[i].replace('--', '');\n                    let splitValue = splitOnSpace[i + 1];\n\n                    if (splitKey === 'authenticationDatabase') {\n                        splitKey = 'authSource';\n                    }\n\n                    // sometimes the next string is another parameter,\n                    // ignore those as they are canned\n                    if (!splitValue.startsWith('--')) {\n                        // get rid of brackets which can cause problems with our inline code\n                        splitValue = splitValue.replace('<', '').replace('>', '');\n                        tempWriter[splitKey] = splitValue;\n                    }\n                }\n            }\n        }\n    }\n\n    parseOutURIParams(shellString, tempWriter) {\n        const uriParamArray = shellString.split('&');\n        for (let i = 0; i < uriParamArray.length; i += 1) {\n            const keyValueString = uriParamArray[i];\n            const keyValueArray = keyValueString.split('=');\n            tempWriter[keyValueArray[0]] = keyValueArray[1];\n        }\n    }\n\n    parseOutEnvAndClusters(splitOnSpaceClusterEnv, tempWriter) {\n        // depending on whether this is 3.6 or 3.4 the cluster info looks slightly different\n        // 3.4 uses the URI to pass in a replica set name\n        let shellMatch = /(\\w+):\\/\\/((\\S+)(:)+(\\S+))\\/(\\w+)?\\?(\\S+)/;\n        const shellMatch36 = /((\\w+)\\+(\\w+)):\\/\\/((\\S+))\\/(\\w+)/;\n        if (splitOnSpaceClusterEnv.startsWith('mongodb+srv')) {\n            shellMatch = shellMatch36;\n        }\n        const shellArray = splitOnSpaceClusterEnv.match(shellMatch);\n        // add length check here?\n        if (shellArray[1] === 'mongodb') {\n            tempWriter.env = TEMPLATE_TYPE_ATLAS_34;\n            const hostListString = shellArray[2];\n            tempWriter.hostlist = hostListString.split(',');\n            this.parseOutURIParams(shellArray[7], tempWriter);\n        } else {\n            tempWriter.env = TEMPLATE_TYPE_ATLAS_36;\n            tempWriter.hostlist = [shellArray[4]];\n        }\n        tempWriter.database = shellArray[6];\n    }\n    // mongo \"mongodb://cluster0-shard-00-00-igkvv.mongodb.net:27017,cluster0-shard-00-01-igkvv.mongodb.net:27017,cluster0-shard-00-02-igkvv.mongodb.net:27017/test?replicaSet=Cluster0-shard-0\" --ssl --authenticationDatabase admin --username mongodb-stitch-easy_bake_oven-aluyj --password <PASSWORD>\n    // mongo \"mongodb+srv://cluster0-igkvv.mongodb.net/test\" --username mongodb-stitch-easy_bake_oven-aluyj\n    parseShell(atlasString, tempWriter) {\n        // split out the mongo and parse the rest\n        const splitOnSpace = atlasString.split(' ');\n        let splitOnSpaceClusterEnv = splitOnSpace[1];\n        // get rid of double quotes\n        splitOnSpaceClusterEnv = splitOnSpaceClusterEnv.replace(/\"/g, '');\n        // get command line args\n        this.parseOutShellParams(splitOnSpace, tempWriter);\n        // get the cluster information\n        this.parseOutEnvAndClusters(splitOnSpaceClusterEnv, tempWriter);\n\n        this.saveState(tempWriter, 'cloud');\n\n        // we need to define success\n        return true;\n    }\n\n    // get the pasted string and parse it out\n    parseIncomingAtlasString(pastedValue) {\n        if (pastedValue === undefined) {\n            return false;\n        }\n        // trim any carriage return line feed business\n        pastedValue = pastedValue.replace(/[\\n\\r]+/g, '').trim();\n        if (pastedValue !== null) {\n            const status = this.parseAtlasString(pastedValue);\n            this.hostList.updateHostsFromUriWriter();\n            return status;\n        }\n        return false;\n    }\n\n    // this is a 3.4 URI\n    // mongodb://<USERNAME>:<PASSWORD>@cluster0-shard-00-00-juau5.mongodb.net:27017,cluster0-shard-00-01-juau5.mongodb.net:27017,cluster0-shard-00-02-juau5.mongodb.net:27017/test?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin\n    parseTo3dot4(atlasString, tempWriter) {\n        tempWriter.env = TEMPLATE_TYPE_ATLAS_34;\n        // save the environment selection\n        this.saveState(tempWriter, 'cloud');\n        tempWriter = this.loadState(this.loadCurrentState());\n        const re = /(\\S+):\\/\\/(\\S+):(\\S*)@(\\S+)\\/(\\S+)\\?(\\S+)/;\n        const matchesArray = atlasString.match(re);\n        if (!matchesArray) {\n            return false;\n        }\n\n        tempWriter.username = matchesArray[2];\n        tempWriter.hostlist = matchesArray[4].split(',');\n        tempWriter.database = matchesArray[5];\n        splitOptions(tempWriter, matchesArray[6]);\n        this.saveState(tempWriter, this.loadCurrentState());\n        return true;\n    }\n\n    // this is a 3.6 url, parse accordingly\n    // ex: mongodb+srv://<USERNAME>:<PASSWORD>@cluster0-juau5.mongodb.net/test\n    parseTo3dot6(atlasString, tempWriter) {\n        tempWriter.env = TEMPLATE_TYPE_ATLAS_36;\n        // save the environment selection\n        this.saveState(tempWriter, 'cloud');\n        tempWriter = this.loadState(this.loadCurrentState());\n        // regexp for 3.6 format\n        const re = /(\\S+):\\/\\/(\\S+):(\\S*)@(\\S+)\\/([^\\s?]+)\\?/;\n        const matchesArray = atlasString.match(re);\n        if (!matchesArray) {\n            return false;\n        }\n\n        tempWriter.username = matchesArray[2];\n        tempWriter.havePassword = Boolean(matchesArray[3]);\n        tempWriter.hostlist = [matchesArray[4]];\n        tempWriter.database = matchesArray[5];\n        this.saveState(tempWriter, this.loadCurrentState());\n        return true;\n    }\n\n    parseAtlasString(atlasString) {\n        const tempWriter = this.loadState('true');\n        // add shell parser here\n        if (atlasString.indexOf(' --') > -1) {\n            return this.parseShell(atlasString, tempWriter);\n        }\n        if (atlasString.startsWith('mongodb+srv')) {\n            return this.parseTo3dot6(atlasString, tempWriter);\n        }\n        return this.parseTo3dot4(atlasString, tempWriter);\n    }\n}\n\n// Create Uriwriter\nexport function setup() {\n    uriwriterSingleton = new UriwriterSingleton();\n    uriwriterSingleton.initializeWidget();\n}\n","function fullDocsPath(base) {\n    const body = document.getElementsByClassName('body')[0];\n    let path = body.getAttribute('data-pagename');\n\n    // skip if pagename is undefined (index.html)\n    if (path === 'index') {\n        path = '';\n    } else if (path) {\n        path = `${path}/`;\n    }\n\n    return `/${base}/${path}`;\n}\n\nexport function setup() {\n    $('.version-selector').on('click', (e) => {\n        e.preventDefault();\n        const base = $(e.currentTarget).data('path');\n        window.location.href = fullDocsPath(base);\n    });\n}\n","import * as componentAccordion from './componentAccordion';\nimport * as componentCloseOpen from './componentCloseOpen';\nimport * as componentCodeBlockFix from './componentCodeBlockFix';\nimport * as componentCopyButtons from './componentCopyButtons';\nimport * as componentFastLoad from './componentFastLoad';\nimport * as componentFeedback from './componentFeedback';\nimport * as componentGuides from './componentGuides';\nimport * as componentLightbox from './componentLightbox';\nimport * as componentOpenAPI from './componentOpenAPI';\nimport * as componentPillStrip from './componentPillStrip';\nimport * as componentSidebar from './componentSidebar';\nimport * as componentTabs from './componentTabs';\nimport * as componentThirdParty from './componentThirdParty';\nimport * as componentToggleController from './componentToggleController';\nimport * as componentUriWriter from './componentUriwriter';\nimport * as componentVersionSelector from './componentVersionSelector';\n\nclass FastNav {\n    constructor() {\n        this.components = [];\n    }\n\n    register(component) {\n        this.components.push(component);\n        if (component.init) { component.init(); }\n    }\n\n    update() {\n        for (const component of this.components) {\n            component.setup(this);\n        }\n    }\n}\nconst fastNav = new FastNav();\n\n$(() => {\n    // Monkey-patch jQuery to add the removed load() event handler.\n    // This is required by the JIRA issue collector 🙄\n    jQuery.fn.load = function(callback) { $(window).on('load', callback); };\n\n    componentThirdParty.initialize();\n\n    fastNav.register(componentCodeBlockFix);\n    fastNav.register(componentCopyButtons);\n    fastNav.register(componentFastLoad);\n    fastNav.register(componentFeedback);\n    fastNav.register(componentLightbox);\n    fastNav.register(componentSidebar);\n    // Must preceed componentTabs\n    fastNav.register(componentPillStrip);\n    fastNav.register(componentTabs);\n    fastNav.register(componentVersionSelector);\n    fastNav.register(componentThirdParty);\n    fastNav.register(componentGuides);\n    fastNav.register(componentOpenAPI);\n    fastNav.register(componentUriWriter);\n    fastNav.register(componentToggleController);\n    fastNav.register(componentCloseOpen);\n    fastNav.register(componentAccordion);\n\n    /* Hide toc if there aren't any items */\n    if (!$('.toc > ul > li > ul > li').length) {\n        $('.right-column .toc').hide();\n    }\n\n    /* Expand/collapse navbar on narrower viewports */\n    $('.expand-toc-icon').on('click', (e) => {\n        e.preventDefault();\n        $('.sidebar').toggleClass('reveal');\n    });\n\n    /* Reset the sidebar when the viewport is wider than tablet size */\n    const $window = $(window);\n    const $sidebar = $('.sidebar');\n    let isTabletWidth = $window.width() <= 1093;\n    $window.resize((e) => {\n        if (isTabletWidth && $window.width() > 1093) {\n            isTabletWidth = false;\n            $sidebar.removeClass('reveal');\n        } else if (!isTabletWidth && $window.width() <= 1093) {\n            isTabletWidth = true;\n        }\n    });\n\n    /* Adjust the scroll location to account for our fixed header */\n    function offsetHashLink() {\n        if (location.hash && document.getElementById(location.hash.substr(1))) {\n            $(window).scrollTop(window.scrollY - 75);\n        }\n    }\n    window.addEventListener('hashchange', offsetHashLink);\n    if (location.hash) {\n        window.setTimeout(offsetHashLink, 10);\n    }\n    $('.content').on('click', 'a', (e) => {\n        // Fixes corner case where the user clicks the same hash link twice\n        if ($(e.currentTarget).attr('href') === location.hash) {\n            window.setTimeout(offsetHashLink, 10);\n        }\n    });\n\n    // Update dynamic page features\n    fastNav.update();\n\n    if (document.querySelector) {\n        // Scroll so that the selected navbar element is in view.\n        const current = document.querySelector('a.current');\n        if (current) {\n            current.scrollIntoView(false);\n        }\n    }\n});\n"],"names":["isLeafNode","$node","siblings","length","toArray","arrayLike","result","i","push","requiresPageload","docsExcludedNav","window","href","indexOf","reportAnalytics","eventName","data","analytics","track","err","error","Dispatcher","listeners","handler","ctx","this","COLLAPSED_PROPERTY","accordionShowHide","element","classList","toggle","control","querySelector","innerHTML","innerText","contains","accordionElements","document","getElementsByClassName","addEventListener","bind","showNavButton","getElementById","onclick","style","display","closeNavButton","fixCodeBlock","block","Boolean","isLineNumberBlock","isCaptionBlock","buttonRow","caption","log","parentNode","insertBefore","nextSibling","tableBody","childNodes","tableButtonRow","createElement","linenosSpacer","buttonRowDestination","className","firstChild","appendChild","codeblocks","codeblock","TOOLTIP_STATE_ACTIVE","TOOLTIP_STATE_INACTIVE","isCopyableCodeBlock","copyableBlocks","filter","highlightElement","copyButton","popupElement","add","closePopupTimer","tempElement","position","body","f","timeoutID","ms","text","trim","value","select","execCommand","Error","replace","clearTimeout","setTimeout","removeChild","code","fastNav","undefined","history","querySelectorAll","XMLHttpRequest","responseURL","navRootElement","bodyElement","curLoading","abortLoading","xhr","abort","loadPage","createHistory","remove","startTime","Date","url","options","onload","status","success","responseText","complete","onerror","open","send","xhrGet","location","pageText","trueUrl","enlapsedMs","pushState","page","title","textContent","newBody","newNav","parentElement","replaceChild","update","onnavigate","scroll","replaceState","nodes","handleClickFunction","ev","button","shiftKey","altKey","metaKey","ctrlKey","preventDefault","currentTarget","node","util","$","onpopstate","state","noop","assign","tar","src","k","appendNode","target","insertNode","anchor","detachNode","name","createText","createTextNode","addListener","event","removeListener","removeEventListener","destroy","detach","fire","set","get","_fragment","u","d","_state","init","component","_handlers","Object","create","_bind","root","store","callAll","fns","shift","proto","key","handlers","slice","__calling","call","observe","callback","fn","on","defer","changed","current","previous","cancel","index","splice","newState","_set","_lock","_beforecreate","_oncreate","_aftercreate","teardown","_recompute","oldState","dirty","_differs","p","_mount","_unmount","a","b","answer","change","upvoteSelected","downvoteSelected","loadJira","jiraurl","scriptElement","type","answers","submit","vote","fields","question","keys","rate","addQuestion","questions","concat","questionName","showCollectorDialog","ATL_JQ_PAGE_PROPS","triggerFunction","showFunc","fieldValues","summary","jQuery","integrity","setAttribute","pagename","createComment","attribute","iterations","project","delugeHeaderClass","delugeBodyClass","delugeClass","FEEDBACK_URL","Deluge","[object Object]","path","app","MainWidget","sendRating","then","catch","console","html","analyticsData","useful","fieldName","Promise","resolve","reject","v","parameters","queryComponents","encodeURIComponent","JSON","stringify","join","addQueryParameters","img","Image","blacklist","getAttribute","localStorage","bodyElements","prototype","hasOwnProperty","ratingPanelElement","askFreeformQuestion","askQuestion","tabsEventDispatcher","getTabPref","parse","getItem","setTabPref","pref","anonymous","tabPref","pages","pathname","tabId","setItem","tabSets","TabSet","tabType","tabStripElements","tabContents","tabStrips","tabIds","tabsElement","tabBars","mainTabBar","first","insertAfter","tabStrip","e","initRect","getBoundingClientRect","offset","scrollY","y","_this","rects","scrollTo","x","isUserAction","getFirstTabId","dispatch","currentAttrValue","tabLink","tabList","parent","dropdownLink","dropdownListItem","hasClass","append","attr","contentElement","children","childElement","tabElement","tabContent","firstTabidElement","tabSet","listen","showHideSelectedTab","tabsElements","register","setup","headings","recalculate","height","clientHeight","innerHeight","currentPosition","documentElement","scrollTop","bestMatch","Infinity","headingElement","tocElement","headingPosition","offsetTop","delta","Math","abs","pillClickHandler","func","wait","args","timeout","later","now","apply","remaining","newArgs","throttle","showCurrentLanguageElements","leftToc","linkElement","id","guidesCategoryListElement","pills","CLASS_ACTIVATED","CLASS_SCALABLE","modal","modalContent","closeLightbox","wrapImage","wrapperElement","captionElement","alt","test","wrapIfNeeded","figure","naturalArea","naturalWidth","naturalHeight","clientWidth","tagName","createClickButNotSelectionHandler","dragStart","formerDragStart","clientX","clientY","toggleResource","classListAction","resourceElement","hash","expand","requested","resourceHeaderElements","tabTypes","elements","pillStripElement","tabsType","pillStripElements","seenPills","tabStripElement","childElements","clickHandler","strip","tabTitle","pill","isCurrentNode","$current","addClass","parents","each","el","css","hide","show","$target","removeClass","slideUp","$el","has","is","slideDown","prepend","expandElement","SAMPLE_FACTORS","initialize","t","r","n","s","c","Array","arguments","SNIPPET_VERSION","o","async","l","getElementsByTagName","invoked","methods","factory","unshift","load","_loadOptions","branch","sampleFactor","delighted","survey","STYLE_SELECTED","STYLE","STYLE_DEPLOY","STYLE_DEPLOYTEXT","setToggleState","getTabNode","nodeName","tabPrefs","cloud","cloudState","list","TEMPLATES","getValue","option","PLACEHOLDER_PATTERN","HostList","rootElement","uriWriter","elementPairs","updateHostsFromUriWriter","loadState","loadCurrentState","hostlist","host","addHost","inputElement","placeholder","statusElement","oninput","lastInput","setHosts","hosts","parsed","exec","port","parseInt","isNaN","setCustomValidity","message","map","pair","uriwriterSingleton","UriwriterSingleton","uristowrite","usernamestowrite","uristowritepasswordredactedshell","uristowriteshell","urireplacestring","hostList","setupURIListeners","loadTemplateEnv","renderURI","registerDispatch","env","saveState","atlas","atlasState","uriwriter","atlaspasteduri","prefix","uri","charAt","urireplacestringPasswordRedactedShell","urireplacestringShell","username","isAtlas","startsWith","saveCurrentState","haveWidgetOnPage","parseIncomingAtlasString","populateForm","addValue","initiallySelected","parentChildren","childIndex","setEnvironment","template","uristring","replaceString","templateShell","templatePasswordRedactedShell","writeToPlaceholders","optionJoinCharacter","parts","localUriString","database","authSource","replicaSet","optionsString","optionStringifier","renderOption","optionElement","label","serverPromptElement","atlaspaste","pastedValue","_this4","setupEnvironmentListeners","atlasControlsElement","toggleEnvironmentExternal","renderOptions","renderFormValues","_this5","splitOnSpace","tempWriter","splitKey","splitValue","shellString","uriParamArray","split","keyValueArray","splitOnSpaceClusterEnv","shellMatch","shellArray","match","hostListString","parseOutURIParams","atlasString","parseOutShellParams","parseOutEnvAndClusters","parseAtlasString","matchesArray","arrayOfMatches","settingsArray","keyValue","havePassword","parseShell","parseTo3dot6","parseTo3dot4","initializeWidget","base","fullDocsPath","components","componentCodeBlockFix","componentCopyButtons","componentFastLoad","componentFeedback","componentLightbox","componentSidebar","componentPillStrip","componentTabs","componentVersionSelector","componentThirdParty","componentGuides","componentOpenAPI","componentUriWriter","componentToggleController","componentCloseOpen","componentAccordion","toggleClass","$window","$sidebar","isTabletWidth","width","offsetHashLink","substr","resize","scrollIntoView"],"mappings":"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"}