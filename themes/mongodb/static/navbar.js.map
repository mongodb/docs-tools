{"version":3,"file":"bundle.es5.min.js","sources":["../src/build/js/componentCopyButtons.js","../src/build/js/util.js","../src/build/js/componentFastLoad.js","../src/build/js/componentSidebar.js","../src/build/js/componentTabs.js","../src/build/js/componentVersionSelector.js","../src/build/js/navbar.js"],"sourcesContent":["export function setup() {\n    const copyableBlocks = document.getElementsByClassName('copyable-code');\n    for (const copyBlock of copyableBlocks) {\n        const highlightElement = copyBlock.getElementsByClassName('highlight')[0];\n        if (!highlightElement) {\n            return;\n        }\n\n        const text = highlightElement.innerText.trim();\n        const copyButtonContainer = document.createElement('div');\n        const copyButton = document.createElement('button');\n        const copyIcon = document.createElement('span');\n        copyButtonContainer.className = 'copy-button-container';\n        copyIcon.className = 'fa fa-clipboard';\n        copyButton.className = 'copy-button';\n        copyButton.appendChild(copyIcon);\n        copyButton.appendChild(document.createTextNode('Copy'));\n        copyButtonContainer.appendChild(copyButton);\n        highlightElement.insertBefore(copyButtonContainer, highlightElement.children[0]);\n        copyButton.addEventListener('click', () => {\n            const tempElement = document.createElement('textarea');\n            document.body.appendChild(tempElement);\n            tempElement.value = text;\n            tempElement.select();\n\n            try {\n                const successful = document.execCommand('copy');\n                if (!successful) {\n                    throw new Error('Failed to copy');\n                }\n            } catch (err) {\n                console.error('Failed to copy');\n                console.error(err);\n            }\n\n            document.body.removeChild(tempElement);\n        });\n    }\n}\n","export function isLeafNode($node) {\n    return !$node.siblings('ul:not(.simple)').length;\n}\n\n/* Checks a whitelist for non-leaf nodes that should trigger a full page reload */\nexport function requiresPageload($node) {\n    const docsExcludedNav = window.docsExcludedNav;\n\n    if (!docsExcludedNav || !docsExcludedNav.length) {\n        return false;\n    }\n\n    for (let i = 0; i < docsExcludedNav.length; i += 1) {\n        if ($node[0].href.indexOf(docsExcludedNav[i]) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n","import * as util from './util';\n\n/* Wrapper around XMLHttpRequest to make it more convenient\n * Calls options.success(response, url), providing the response text and\n *         the canonical URL after redirects.\n * Calls options.error() on error.\n * jQuery's wrapper does not supply XMLHttpRequest.responseURL, making\n * this rewrite necessary. */\nfunction xhrGet(url, options) {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onload = function() {\n        if (xhr.status >= 200 && xhr.status < 400) {\n            options.success(xhr.responseText, xhr.responseURL);\n            options.complete();\n        } else {\n            options.error();\n            options.complete();\n        }\n    };\n\n    xhr.onerror = function() {\n        options.error();\n        options.complete();\n    };\n\n    xhr.open('GET', url, true);\n    try {\n        xhr.send();\n    } catch (err) {\n        options.error();\n        options.complete();\n    }\n}\n\n// If the browser is sufficiently modern, make navbar links load only\n// content pieces to avoid a full page load.\nexport function setup(fastNav) {\n    if (window.history === undefined ||\n        document.querySelectorAll === undefined ||\n        document.body.classList === undefined ||\n        (new XMLHttpRequest()).responseURL === undefined) {\n        return false;\n    }\n\n    let navRootElement = document.querySelector('.sphinxsidebarwrapper');\n    let bodyElement = document.querySelector('.body');\n    let curLoading = {};\n\n    // Set up initial state so we can return to our initial landing page.\n    window.history.replaceState({'href': window.location.href},\n                                document.querySelector('title').textContent,\n                                window.location.href);\n\n    // Stop loading the currently-in-progress page.\n    function abortLoading() {\n        if (curLoading.timeoutID !== undefined) {\n            window.clearTimeout(curLoading.timeoutID);\n        }\n\n        if (curLoading.xhr !== undefined) {\n            curLoading.xhr.abort();\n        }\n\n        curLoading = {};\n    }\n\n    // Load the specified URL.\n    function loadPage(href, createHistory) {\n        if (href === undefined) {\n            console.error('Going to undefined path');\n        }\n\n        abortLoading();\n        bodyElement.classList.add('loading');\n\n        // If something goes wrong while loading, we don't want to leave\n        // people without a paddle. If we can't load after a long period of\n        // time, bring back the original content.\n        curLoading.timeoutID = window.setTimeout(() => {\n            bodyElement.classList.remove('loading');\n            curLoading.timeoutID = -1;\n        }, 10000);\n\n        const startTime = new Date();\n        curLoading.xhr = xhrGet(href, {\n            'complete': () => {\n                abortLoading();\n            },\n            'error': (error) => {\n            // Some browsers consider any file://-type request to be cross-origin.\n            // Upon any kind of error, fall back to classic behavior\n                console.error(`Failed to load ${href}`);\n                window.location = href;\n            },\n            'success': (pageText, trueUrl) => {\n                const enlapsedMs = (new Date()) - startTime;\n                bodyElement.classList.remove('loading');\n\n                // Change URL before loading the DOM to properly resolve URLs\n                if (createHistory) {\n                    window.history.pushState({'href': trueUrl}, '', trueUrl);\n                }\n\n                const page = document.createElement('html');\n                page.innerHTML = pageText;\n                const title = page.querySelector('title').textContent;\n                const newBody = page.querySelector('.body');\n                const newNav = page.querySelector('.sphinxsidebarwrapper');\n\n                // Fade in ONLY if we had enough time to start fading out.\n                if (enlapsedMs > (250 / 4)) {\n                    newBody.classList.add('loading');\n                }\n\n                // Replace the DOM elements\n                bodyElement.parentElement.replaceChild(newBody, bodyElement);\n                bodyElement = newBody;\n                navRootElement.parentElement.replaceChild(newNav, navRootElement);\n                navRootElement = newNav;\n                document.title = title;\n\n                // Update dynamic page features\n                fastNav.update();\n\n                if (window.history.onnavigate) {\n                    window.history.onnavigate();\n                }\n\n                // Prime the new DOM so that we can set up our fade-in\n                // animation and scroll the new contents to the top.\n                window.setTimeout(() => {\n                    bodyElement.classList.remove('loading');\n\n                    // Scroll to the top of the page only if this is a new history entry.\n                    if (createHistory) {\n                        window.scroll(0, 0);\n                    }\n                }, 1);\n            }\n        });\n    }\n\n    // Set up fastnav links\n    const nodes = document.querySelectorAll('.sphinxsidebarwrapper > ul a.reference.internal');\n    function handleClickFunction(ev) {\n        // Ignore anything but vanilla click events, so that people can\n        // still use special browser behaviors like open in new tab.\n        if (!(ev.button !== 0 || ev.shiftKey || ev.altKey || ev.metaKey || ev.ctrlKey)) {\n            ev.preventDefault();\n            loadPage(ev.currentTarget.href, true);\n        }\n    }\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (!util.isLeafNode($(node)) && !util.requiresPageload($(node))) { continue; }\n\n        node.addEventListener('click', handleClickFunction);\n    }\n\n    window.onpopstate = function(ev) {\n        if (ev.state === null) { return; }\n        loadPage(ev.state.href, false);\n    };\n\n\n    return true;\n}\n","import * as util from './util';\n\n/* currently open page */\nfunction isCurrentNode($node) {\n    return $node.hasClass('current');\n}\n\nexport function setup() {\n    let $current = $('.sidebar a.current');\n    if (util.isLeafNode($current) || util.requiresPageload($current) || isCurrentNode($current)) {\n        $current.parent('li').addClass('selected-item');\n    }\n    $current.parents('ul').each((index, el) => {\n        $(el).css('display', 'block');\n    });\n\n    $('.sphinxsidebarwrapper > ul li:not(.current) > ul:not(.current)').hide();\n    $('.sphinxsidebarwrapper').show();\n\n    /*\n     * This event handler defines the left-column navigation's behavior\n     * The logic conforms to how sphinx generates the markup\n     * The rules are:\n     *  $('a.current') is the title of the content that is currently rendered\n     *    (this should never be changed client-side)\n     *  $('ul.current, li.current') are the set of lists that are currently expanded\n     *  $('li.selected-item') is the currently highlighted item\n     */\n    $('.sphinxsidebarwrapper .toctree-l1').on('click', 'a', (e) => {\n        const $target = $(e.currentTarget);\n        if (util.isLeafNode($target)) {\n            // Do a full page reload on leaf nodes\n            return;\n        }\n\n        // Release notes has special behavior to click through\n        if (!$target.parent().hasClass('selected-item') && util.requiresPageload($target)) {\n            return;\n        }\n\n        e.preventDefault();\n\n        if ($target.parent().hasClass('current')) {\n            // collapse target node\n            $target.parent().removeClass('current selected-item');\n            $target.siblings('ul').slideUp();\n        } else {\n\n            $current.parent().removeClass('selected-item');\n            // roll up all navigation up to the common ancestor\n            $current.parents().\n                add($current.siblings('ul')).\n                each((index, el) => {\n                    const $el = $(el);\n                    if ($el.has(e.currentTarget).length) {\n                        return;\n                    }\n\n                    if ($el.is('ul')) {\n                        $el.removeClass('current').slideUp();\n                    } else {\n                        $el.removeClass('current');\n                    }\n                });\n            // add css classes for the new 'current' nav item\n            $target.parent().addClass('current');\n            $target.siblings('ul').slideDown(() => {\n                if (util.isLeafNode($target) ||\n                    util.requiresPageload($target) ||\n                    isCurrentNode($current)) {\n                    $target.parent('li').addClass('selected-item');\n                }\n            });\n            // set new $current\n            $current = $target;\n        }\n    });\n\n    /* Add expand icons to indicate what's expandable and what's a link. This\n       is necessary when (1) we're at a leaf node, or (2) the menu triggers\n       a page load. */\n    $('.sphinxsidebarwrapper > ul ul a.reference').prepend(function(index) {\n        const expandElement = $('<span class=\"expand-icon\"></span>');\n        const self = $(this);\n\n        if (!util.isLeafNode(self)) {\n            expandElement.addClass('fa fa-plus');\n        }\n\n        return expandElement;\n    });\n}\n","// Show the appropriate tab content and hide other tab's content\nfunction showHideTabContent(currentAttrValue) {\n    $(`.tabs ${currentAttrValue}`).\n        show().\n        siblings().\n        hide();\n}\n\n// Marks the selected tab as active, handles special cases for the dropdown\nfunction showHideSelectedTab(currentAttrValue) {\n    // Get the <a>, <li> and <ul> of the selected tab\n    const tabLink = $(`a[href=${currentAttrValue}]`);\n    const tabListItem = tabLink.parent('li');\n    const tabList = tabListItem.parent('ul');\n\n     // Get the dropdown <a> and <li> for active and label management\n    const dropdownLink = $('.tabs .dropdown-toggle');\n    const dropdownListItem = $('.tabs .dropdown');\n\n    // Set the active tab, if it's on the dropdown set it to active and change label\n    if (tabList.hasClass('dropdown-menu')) {\n        dropdownLink.text(`${tabLink.text()} `).append('<span class=\"caret\"></span>');\n        dropdownListItem.\n            addClass('active').\n            siblings().\n            removeClass('active');\n    } else {\n        // Set a non-dropdown tab to active, and change the dropdown label back to \"Other\"\n        tabListItem.\n            addClass('active').\n            siblings().\n            removeClass('active');\n        dropdownLink.text('Other ').append('<span class=\"caret\"></span>');\n    }\n}\n\n// Create tab functionality for code examples\nexport function setup() {\n    let initialAttrValue = null;\n\n    // Check if the user has a preference stored, if so load it\n    if (localStorage.getItem('languagePref')) {\n        initialAttrValue = localStorage.getItem('languagePref');\n    } else {\n        const tabsElement = document.querySelector('.nav-tabs > .active > [href]');\n        if (!tabsElement) {\n            return;\n        }\n\n        initialAttrValue = tabsElement.getAttribute('href');\n    }\n\n    // Show the appropriate tab content and mark the tab as active\n    showHideTabContent(initialAttrValue);\n    showHideSelectedTab(initialAttrValue);\n\n    document.querySelectorAll('.tabs .nav-tabs a').forEach((element) => {\n        element.onclick = function(e) {\n            // Get the href of the clicked tab\n            const currentAttrValue = element.getAttribute('href');\n\n            // Check to make sure value is not null, i.e., don't do anything on \"other\"\n            if (currentAttrValue) {\n                // Save the users preference\n                localStorage.setItem('languagePref', currentAttrValue);\n\n                // Show the appropriate tab content and mark the tab as active\n                showHideTabContent(currentAttrValue);\n                showHideSelectedTab(currentAttrValue);\n\n                e.preventDefault();\n            }\n        };\n    });\n}\n","function fullDocsPath(base) {\n    const body = document.getElementsByClassName('body')[0];\n    let path = body.getAttribute('data-pagename');\n\n    // skip if pagename is undefined (index.html)\n    if (path === 'index') {\n        path = '';\n    } else if (path) {\n        path = `${path}/`;\n    }\n\n    return `/${base}/${path}`;\n}\n\nexport function setup() {\n    $('.version-selector').on('click', (e) => {\n        e.preventDefault();\n        const base = $(e.currentTarget).data('path');\n        window.location.href = fullDocsPath(base);\n    });\n}\n","import * as componentCopyButtons from './componentCopyButtons';\nimport * as componentFastLoad from './componentFastLoad';\nimport * as componentSidebar from './componentSidebar';\nimport * as componentTabs from './componentTabs';\nimport * as componentVersionSelector from './componentVersionSelector';\n\nclass FastNav {\n    constructor() {\n        this.components = [];\n    }\n\n    register(component) {\n        this.components.push(component);\n    }\n\n    update() {\n        for (const component of this.components) {\n            component.setup(this);\n        }\n    }\n}\nconst fastNav = new FastNav();\n\n$(() => {\n    fastNav.register(componentSidebar);\n    fastNav.register(componentFastLoad);\n    fastNav.register(componentVersionSelector);\n    fastNav.register(componentCopyButtons);\n    fastNav.register(componentTabs);\n\n    $('body').on('click', '#header-db, .sidebar, .content', (e) => {\n        $('.option-popup').\n            addClass('closed').\n            find('.fa-angle-down, .fa-angle-up').\n            removeClass('fa-angle-down').\n            addClass('fa-angle-up');\n    });\n\n    /* Open options panel when clicking the version */\n    $('.sphinxsidebarwrapper h3 a.version').on('click', (e) => {\n        e.preventDefault();\n\n        // stop propagation to prevent reclosing of the option panel\n        e.stopPropagation();\n        $('.option-popup').removeClass('closed');\n    });\n\n    /* Hide toc if there aren't any items */\n    if (!$('.toc > ul > li > ul > li').length) {\n        $('.right-column .toc').hide();\n    }\n\n    /* Expand/collapse navbar on narrower viewports */\n    $('.expand-toc-icon').on('click', (e) => {\n        e.preventDefault();\n        $('.sidebar').toggleClass('reveal');\n    });\n\n    /* Reset the sidebar when the viewport is wider than tablet size */\n    const $window = $(window);\n    const $sidebar = $('.sidebar');\n    let isTabletWidth = $window.width() <= 1093;\n    $window.resize((e) => {\n        if (isTabletWidth && $window.width() > 1093) {\n            isTabletWidth = false;\n            $sidebar.removeClass('reveal');\n        } else if (!isTabletWidth && $window.width() <= 1093) {\n            isTabletWidth = true;\n        }\n    });\n\n    /* Adjust the scroll location to account for our fixed header */\n    function offsetHashLink() {\n        if (location.hash && document.getElementById(location.hash.substr(1))) {\n            $(window).scrollTop(window.scrollY - 75);\n        }\n    }\n    window.addEventListener('hashchange', offsetHashLink);\n    if (location.hash) {\n        window.setTimeout(offsetHashLink, 10);\n    }\n    $('.content').on('click', 'a', (e) => {\n        // Fixes corner case where the user clicks the same hash link twice\n        if ($(e.currentTarget).attr('href') === location.hash) {\n            window.setTimeout(offsetHashLink, 10);\n        }\n    });\n\n    // Update dynamic page features\n    fastNav.update();\n\n    if (document.querySelector) {\n        // Scroll so that the selected navbar element is in view.\n        const current = document.querySelector('a.current');\n        if (current) {\n            current.scrollIntoView(false);\n        }\n    }\n});\n"],"names":["setup","copyableBlocks","document","getElementsByClassName","loop","const","copyBlock","highlightElement","text","innerText","trim","copyButtonContainer","createElement","copyButton","copyIcon","className","appendChild","createTextNode","insertBefore","children","addEventListener","tempElement","body","value","select","successful","execCommand","Error","err","console","error","removeChild","i","list","length","isLeafNode","$node","siblings","requiresPageload","docsExcludedNav","window","let","href","indexOf","xhrGet","url","options","xhr","XMLHttpRequest","onload","status","success","responseText","responseURL","complete","onerror","open","send","fastNav","abortLoading","undefined","curLoading","timeoutID","clearTimeout","abort","loadPage","createHistory","bodyElement","classList","add","setTimeout","remove","startTime","Date","location","pageText","trueUrl","enlapsedMs","history","pushState","page","innerHTML","title","querySelector","textContent","newBody","newNav","parentElement","replaceChild","navRootElement","update","onnavigate","scroll","handleClickFunction","ev","button","shiftKey","altKey","metaKey","ctrlKey","preventDefault","currentTarget","querySelectorAll","replaceState","nodes","node","util.isLeafNode","$","util.requiresPageload","onpopstate","state","isCurrentNode","hasClass","$current","parent","addClass","parents","each","index","el","css","hide","show","on","e","$target","removeClass","slideUp","$el","has","is","slideDown","prepend","expandElement","self","this","showHideTabContent","currentAttrValue","showHideSelectedTab","tabLink","tabListItem","tabList","dropdownLink","dropdownListItem","append","initialAttrValue","localStorage","getItem","tabsElement","getAttribute","forEach","element","onclick","setItem","fullDocsPath","base","path","data","FastNav","components","prototype","register","component","push","offsetHashLink","hash","getElementById","substr","scrollTop","scrollY","componentSidebar","componentFastLoad","componentVersionSelector","componentCopyButtons","componentTabs","find","stopPropagation","toggleClass","$window","$sidebar","isTabletWidth","width","resize","attr","current","scrollIntoView"],"mappings":"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"}